{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/fhevm/internal/constants.ts"],"sourcesContent":["export const SDK_CDN_URL =\n  \"https://cdn.zama.ai/relayer-sdk-js/0.2.0/relayer-sdk-js.umd.cjs\";\n"],"names":[],"mappings":";;;;AAAO,MAAM,cACX","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/fhevm/internal/RelayerSDKLoader.ts"],"sourcesContent":["import { FhevmRelayerSDKType, FhevmWindowType } from \"./fhevmTypes\";\nimport { SDK_CDN_URL } from \"./constants\";\n\ntype TraceType = (message?: unknown, ...optionalParams: unknown[]) => void;\n\nexport class RelayerSDKLoader {\n  private _trace?: TraceType;\n\n  constructor(options: { trace?: TraceType }) {\n    this._trace = options.trace;\n  }\n\n  public isLoaded() {\n    if (typeof window === \"undefined\") {\n      throw new Error(\"RelayerSDKLoader: can only be used in the browser.\");\n    }\n    return isFhevmWindowType(window, this._trace);\n  }\n\n  public load(): Promise<void> {\n    console.log(\"[RelayerSDKLoader] load...\");\n    // Ensure this only runs in the browser\n    if (typeof window === \"undefined\") {\n      console.log(\"[RelayerSDKLoader] window === undefined\");\n      return Promise.reject(\n        new Error(\"RelayerSDKLoader: can only be used in the browser.\")\n      );\n    }\n\n    if (\"relayerSDK\" in window) {\n      if (!isFhevmRelayerSDKType(window.relayerSDK, this._trace)) {\n        console.log(\"[RelayerSDKLoader] window.relayerSDK === undefined\");\n        throw new Error(\"RelayerSDKLoader: Unable to load FHEVM Relayer SDK\");\n      }\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const existingScript = document.querySelector(\n        `script[src=\"${SDK_CDN_URL}\"]`\n      );\n      if (existingScript) {\n        if (!isFhevmWindowType(window, this._trace)) {\n          reject(\n            new Error(\n              \"RelayerSDKLoader: window object does not contain a valid relayerSDK object.\"\n            )\n          );\n        }\n        resolve();\n        return;\n      }\n\n      const script = document.createElement(\"script\");\n      script.src = SDK_CDN_URL;\n      script.type = \"text/javascript\";\n      script.async = true;\n\n      script.onload = () => {\n        if (!isFhevmWindowType(window, this._trace)) {\n          console.log(\"[RelayerSDKLoader] script onload FAILED...\");\n          reject(\n            new Error(\n              `RelayerSDKLoader: Relayer SDK script has been successfully loaded from ${SDK_CDN_URL}, however, the window.relayerSDK object is invalid.`\n            )\n          );\n        }\n        resolve();\n      };\n\n      script.onerror = () => {\n        console.log(\"[RelayerSDKLoader] script onerror... \");\n        reject(\n          new Error(\n            `RelayerSDKLoader: Failed to load Relayer SDK from ${SDK_CDN_URL}`\n          )\n        );\n      };\n\n      console.log(\"[RelayerSDKLoader] add script to DOM...\");\n      document.head.appendChild(script);\n      console.log(\"[RelayerSDKLoader] script added!\")\n    });\n  }\n}\n\nfunction isFhevmRelayerSDKType(\n  o: unknown,\n  trace?: TraceType\n): o is FhevmRelayerSDKType {\n  if (typeof o === \"undefined\") {\n    trace?.(\"RelayerSDKLoader: relayerSDK is undefined\");\n    return false;\n  }\n  if (o === null) {\n    trace?.(\"RelayerSDKLoader: relayerSDK is null\");\n    return false;\n  }\n  if (typeof o !== \"object\") {\n    trace?.(\"RelayerSDKLoader: relayerSDK is not an object\");\n    return false;\n  }\n  if (!objHasProperty(o, \"initSDK\", \"function\", trace)) {\n    trace?.(\"RelayerSDKLoader: relayerSDK.initSDK is invalid\");\n    return false;\n  }\n  if (!objHasProperty(o, \"createInstance\", \"function\", trace)) {\n    trace?.(\"RelayerSDKLoader: relayerSDK.createInstance is invalid\");\n    return false;\n  }\n  if (!objHasProperty(o, \"SepoliaConfig\", \"object\", trace)) {\n    trace?.(\"RelayerSDKLoader: relayerSDK.SepoliaConfig is invalid\");\n    return false;\n  }\n  if (\"__initialized__\" in o) {\n    if (o.__initialized__ !== true && o.__initialized__ !== false) {\n      trace?.(\"RelayerSDKLoader: relayerSDK.__initialized__ is invalid\");\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFhevmWindowType(\n  win: unknown,\n  trace?: TraceType\n): win is FhevmWindowType {\n  if (typeof win === \"undefined\") {\n    trace?.(\"RelayerSDKLoader: window object is undefined\");\n    return false;\n  }\n  if (win === null) {\n    trace?.(\"RelayerSDKLoader: window object is null\");\n    return false;\n  }\n  if (typeof win !== \"object\") {\n    trace?.(\"RelayerSDKLoader: window is not an object\");\n    return false;\n  }\n  if (!(\"relayerSDK\" in win)) {\n    trace?.(\"RelayerSDKLoader: window does not contain 'relayerSDK' property\");\n    return false;\n  }\n  return isFhevmRelayerSDKType(win.relayerSDK);\n}\n\nfunction objHasProperty<\n  T extends object,\n  K extends PropertyKey,\n  V extends string // \"string\", \"number\", etc.\n>(\n  obj: T,\n  propertyName: K,\n  propertyType: V,\n  trace?: TraceType\n): obj is T &\n  Record<\n    K,\n    V extends \"string\"\n      ? string\n      : V extends \"number\"\n      ? number\n      : V extends \"object\"\n      ? object\n      : V extends \"boolean\"\n      ? boolean\n      : V extends \"function\"\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (...args: any[]) => any\n      : unknown\n  > {\n  if (!obj || typeof obj !== \"object\") {\n    return false;\n  }\n\n  if (!(propertyName in obj)) {\n    trace?.(`RelayerSDKLoader: missing ${String(propertyName)}.`);\n    return false;\n  }\n\n  const value = (obj as Record<K, unknown>)[propertyName];\n\n  if (value === null || value === undefined) {\n    trace?.(`RelayerSDKLoader: ${String(propertyName)} is null or undefined.`);\n    return false;\n  }\n\n  if (typeof value !== propertyType) {\n    trace?.(\n      `RelayerSDKLoader: ${String(propertyName)} is not a ${propertyType}.`\n    );\n    return false;\n  }\n\n  return true;\n}\n"],"names":[],"mappings":";;;;;;AACA;;AAIO,MAAM;IACH,OAAmB;IAE3B,YAAY,OAA8B,CAAE;QAC1C,IAAI,CAAC,MAAM,GAAG,QAAQ,KAAK;IAC7B;IAEO,WAAW;QAChB,wCAAmC;YACjC,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,kBAAkB,QAAQ,IAAI,CAAC,MAAM;IAC9C;IAEO,OAAsB;QAC3B,QAAQ,GAAG,CAAC;QACZ,uCAAuC;QACvC,wCAAmC;YACjC,QAAQ,GAAG,CAAC;YACZ,OAAO,QAAQ,MAAM,CACnB,IAAI,MAAM;QAEd;;;IAwDF;AACF;AAEA,SAAS,sBACP,CAAU,EACV,KAAiB;IAEjB,IAAI,OAAO,MAAM,aAAa;QAC5B,QAAQ;QACR,OAAO;IACT;IACA,IAAI,MAAM,MAAM;QACd,QAAQ;QACR,OAAO;IACT;IACA,IAAI,OAAO,MAAM,UAAU;QACzB,QAAQ;QACR,OAAO;IACT;IACA,IAAI,CAAC,eAAe,GAAG,WAAW,YAAY,QAAQ;QACpD,QAAQ;QACR,OAAO;IACT;IACA,IAAI,CAAC,eAAe,GAAG,kBAAkB,YAAY,QAAQ;QAC3D,QAAQ;QACR,OAAO;IACT;IACA,IAAI,CAAC,eAAe,GAAG,iBAAiB,UAAU,QAAQ;QACxD,QAAQ;QACR,OAAO;IACT;IACA,IAAI,qBAAqB,GAAG;QAC1B,IAAI,EAAE,eAAe,KAAK,QAAQ,EAAE,eAAe,KAAK,OAAO;YAC7D,QAAQ;YACR,OAAO;QACT;IACF;IACA,OAAO;AACT;AAEO,SAAS,kBACd,GAAY,EACZ,KAAiB;IAEjB,IAAI,OAAO,QAAQ,aAAa;QAC9B,QAAQ;QACR,OAAO;IACT;IACA,IAAI,QAAQ,MAAM;QAChB,QAAQ;QACR,OAAO;IACT;IACA,IAAI,OAAO,QAAQ,UAAU;QAC3B,QAAQ;QACR,OAAO;IACT;IACA,IAAI,CAAC,CAAC,gBAAgB,GAAG,GAAG;QAC1B,QAAQ;QACR,OAAO;IACT;IACA,OAAO,sBAAsB,IAAI,UAAU;AAC7C;AAEA,SAAS,eAKP,GAAM,EACN,YAAe,EACf,YAAe,EACf,KAAiB;IAiBjB,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACnC,OAAO;IACT;IAEA,IAAI,CAAC,CAAC,gBAAgB,GAAG,GAAG;QAC1B,QAAQ,CAAC,0BAA0B,EAAE,OAAO,cAAc,CAAC,CAAC;QAC5D,OAAO;IACT;IAEA,MAAM,QAAQ,AAAC,GAA0B,CAAC,aAAa;IAEvD,IAAI,UAAU,QAAQ,UAAU,WAAW;QACzC,QAAQ,CAAC,kBAAkB,EAAE,OAAO,cAAc,sBAAsB,CAAC;QACzE,OAAO;IACT;IAEA,IAAI,OAAO,UAAU,cAAc;QACjC,QACE,CAAC,kBAAkB,EAAE,OAAO,cAAc,UAAU,EAAE,aAAa,CAAC,CAAC;QAEvE,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/fhevm/internal/PublicKeyStorage.ts"],"sourcesContent":["import { openDB, DBSchema, IDBPDatabase } from \"idb\";\n\ntype FhevmStoredPublicKey = {\n  publicKeyId: string;\n  publicKey: Uint8Array;\n};\n\ntype FhevmStoredPublicParams = {\n  publicParamsId: string;\n  publicParams: Uint8Array;\n};\n\ninterface PublicParamsDB extends DBSchema {\n  publicKeyStore: {\n    key: string;\n    value: {\n      acl: `0x${string}`;\n      value: FhevmStoredPublicKey;\n    };\n  };\n  paramsStore: {\n    key: string;\n    value: {\n      acl: `0x${string}`;\n      value: FhevmStoredPublicParams;\n    };\n  };\n}\n\nlet __dbPromise: Promise<IDBPDatabase<PublicParamsDB>> | undefined = undefined;\n\nasync function _getDB(): Promise<IDBPDatabase<PublicParamsDB> | undefined> {\n  if (__dbPromise) {\n    return __dbPromise;\n  }\n  if (typeof window === \"undefined\") {\n    return undefined;\n  }\n  __dbPromise = openDB<PublicParamsDB>(\"fhevm\", 1, {\n    upgrade(db) {\n      if (!db.objectStoreNames.contains(\"paramsStore\")) {\n        db.createObjectStore(\"paramsStore\", { keyPath: \"acl\" });\n      }\n      if (!db.objectStoreNames.contains(\"publicKeyStore\")) {\n        db.createObjectStore(\"publicKeyStore\", { keyPath: \"acl\" });\n      }\n    },\n  });\n  return __dbPromise;\n}\n\ntype FhevmInstanceConfigPublicKey = {\n  data: Uint8Array | null;\n  id: string | null;\n};\n\ntype FhevmInstanceConfigPublicParams = {\n  \"2048\": {\n    publicParamsId: string;\n    publicParams: Uint8Array;\n  };\n};\n\nfunction assertFhevmStoredPublicKey(\n  value: unknown\n): asserts value is FhevmStoredPublicKey | null {\n  if (typeof value !== \"object\") {\n    throw new Error(`FhevmStoredPublicKey must be an object`);\n  }\n  if (value === null) {\n    return;\n  }\n  if (!(\"publicKeyId\" in value)) {\n    throw new Error(`FhevmStoredPublicKey.publicKeyId does not exist`);\n  }\n  if (typeof value.publicKeyId !== \"string\") {\n    throw new Error(`FhevmStoredPublicKey.publicKeyId must be a string`);\n  }\n  if (!(\"publicKey\" in value)) {\n    throw new Error(`FhevmStoredPublicKey.publicKey does not exist`);\n  }\n  if (!(value.publicKey instanceof Uint8Array)) {\n    throw new Error(`FhevmStoredPublicKey.publicKey must be a Uint8Array`);\n  }\n}\n\nfunction assertFhevmStoredPublicParams(\n  value: unknown\n): asserts value is FhevmStoredPublicParams | null {\n  if (typeof value !== \"object\") {\n    throw new Error(`FhevmStoredPublicParams must be an object`);\n  }\n  if (value === null) {\n    return;\n  }\n  if (!(\"publicParamsId\" in value)) {\n    throw new Error(`FhevmStoredPublicParams.publicParamsId does not exist`);\n  }\n  if (typeof value.publicParamsId !== \"string\") {\n    throw new Error(`FhevmStoredPublicParams.publicParamsId must be a string`);\n  }\n  if (!(\"publicParams\" in value)) {\n    throw new Error(`FhevmStoredPublicParams.publicParams does not exist`);\n  }\n  if (!(value.publicParams instanceof Uint8Array)) {\n    throw new Error(\n      `FhevmStoredPublicParams.publicParams must be a Uint8Array`\n    );\n  }\n}\n\nexport async function publicKeyStorageGet(aclAddress: `0x${string}`): Promise<{\n  publicKey?: FhevmInstanceConfigPublicKey;\n  publicParams: FhevmInstanceConfigPublicParams | null;\n}> {\n  const db = await _getDB();\n  if (!db) {\n    return { publicParams: null };\n  }\n\n  let storedPublicKey: FhevmStoredPublicKey | null = null;\n  try {\n    const pk = await db.get(\"publicKeyStore\", aclAddress);\n    if (pk?.value) {\n      assertFhevmStoredPublicKey(pk.value);\n      storedPublicKey = pk.value;\n    }\n  } catch {\n    //\n  }\n\n  let storedPublicParams: FhevmStoredPublicParams | null = null;\n  try {\n    const pp = await db.get(\"paramsStore\", aclAddress);\n    if (pp?.value) {\n      assertFhevmStoredPublicParams(pp.value);\n      storedPublicParams = pp.value;\n    }\n  } catch {\n    //\n  }\n\n  const publicKeyData = storedPublicKey?.publicKey;\n  const publicKeyId = storedPublicKey?.publicKeyId;\n  const publicParams = storedPublicParams\n    ? {\n        \"2048\": storedPublicParams,\n      }\n    : null;\n\n  let publicKey: FhevmInstanceConfigPublicKey | undefined = undefined;\n\n  if (publicKeyId && publicKeyData) {\n    publicKey = {\n      id: publicKeyId,\n      data: publicKeyData,\n    };\n  }\n\n  return {\n    ...(publicKey !== undefined && { publicKey }),\n    publicParams,\n  };\n}\n\nexport async function publicKeyStorageSet(\n  aclAddress: `0x${string}`,\n  publicKey: FhevmStoredPublicKey | null,\n  publicParams: FhevmStoredPublicParams | null\n) {\n  assertFhevmStoredPublicKey(publicKey);\n  assertFhevmStoredPublicParams(publicParams);\n\n  const db = await _getDB();\n  if (!db) {\n    return;\n  }\n\n  if (publicKey) {\n    await db.put(\"publicKeyStore\", { acl: aclAddress, value: publicKey });\n  }\n\n  if (publicParams) {\n    await db.put(\"paramsStore\", { acl: aclAddress, value: publicParams });\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AA6BA,IAAI,cAAiE;AAErE,eAAe;IACb,IAAI,aAAa;QACf,OAAO;IACT;IACA,wCAAmC;QACjC,OAAO;IACT;;;AAYF;AAcA,SAAS,2BACP,KAAc;IAEd,IAAI,OAAO,UAAU,UAAU;QAC7B,MAAM,IAAI,MAAM,CAAC,sCAAsC,CAAC;IAC1D;IACA,IAAI,UAAU,MAAM;QAClB;IACF;IACA,IAAI,CAAC,CAAC,iBAAiB,KAAK,GAAG;QAC7B,MAAM,IAAI,MAAM,CAAC,+CAA+C,CAAC;IACnE;IACA,IAAI,OAAO,MAAM,WAAW,KAAK,UAAU;QACzC,MAAM,IAAI,MAAM,CAAC,iDAAiD,CAAC;IACrE;IACA,IAAI,CAAC,CAAC,eAAe,KAAK,GAAG;QAC3B,MAAM,IAAI,MAAM,CAAC,6CAA6C,CAAC;IACjE;IACA,IAAI,CAAC,CAAC,MAAM,SAAS,YAAY,UAAU,GAAG;QAC5C,MAAM,IAAI,MAAM,CAAC,mDAAmD,CAAC;IACvE;AACF;AAEA,SAAS,8BACP,KAAc;IAEd,IAAI,OAAO,UAAU,UAAU;QAC7B,MAAM,IAAI,MAAM,CAAC,yCAAyC,CAAC;IAC7D;IACA,IAAI,UAAU,MAAM;QAClB;IACF;IACA,IAAI,CAAC,CAAC,oBAAoB,KAAK,GAAG;QAChC,MAAM,IAAI,MAAM,CAAC,qDAAqD,CAAC;IACzE;IACA,IAAI,OAAO,MAAM,cAAc,KAAK,UAAU;QAC5C,MAAM,IAAI,MAAM,CAAC,uDAAuD,CAAC;IAC3E;IACA,IAAI,CAAC,CAAC,kBAAkB,KAAK,GAAG;QAC9B,MAAM,IAAI,MAAM,CAAC,mDAAmD,CAAC;IACvE;IACA,IAAI,CAAC,CAAC,MAAM,YAAY,YAAY,UAAU,GAAG;QAC/C,MAAM,IAAI,MACR,CAAC,yDAAyD,CAAC;IAE/D;AACF;AAEO,eAAe,oBAAoB,UAAyB;IAIjE,MAAM,KAAK,MAAM;IACjB,IAAI,CAAC,IAAI;QACP,OAAO;YAAE,cAAc;QAAK;IAC9B;IAEA,IAAI,kBAA+C;IACnD,IAAI;QACF,MAAM,KAAK,MAAM,GAAG,GAAG,CAAC,kBAAkB;QAC1C,IAAI,IAAI,OAAO;YACb,2BAA2B,GAAG,KAAK;YACnC,kBAAkB,GAAG,KAAK;QAC5B;IACF,EAAE,OAAM;IACN,EAAE;IACJ;IAEA,IAAI,qBAAqD;IACzD,IAAI;QACF,MAAM,KAAK,MAAM,GAAG,GAAG,CAAC,eAAe;QACvC,IAAI,IAAI,OAAO;YACb,8BAA8B,GAAG,KAAK;YACtC,qBAAqB,GAAG,KAAK;QAC/B;IACF,EAAE,OAAM;IACN,EAAE;IACJ;IAEA,MAAM,gBAAgB,iBAAiB;IACvC,MAAM,cAAc,iBAAiB;IACrC,MAAM,eAAe,qBACjB;QACE,QAAQ;IACV,IACA;IAEJ,IAAI,YAAsD;IAE1D,IAAI,eAAe,eAAe;QAChC,YAAY;YACV,IAAI;YACJ,MAAM;QACR;IACF;IAEA,OAAO;QACL,GAAI,cAAc,aAAa;YAAE;QAAU,CAAC;QAC5C;IACF;AACF;AAEO,eAAe,oBACpB,UAAyB,EACzB,SAAsC,EACtC,YAA4C;IAE5C,2BAA2B;IAC3B,8BAA8B;IAE9B,MAAM,KAAK,MAAM;IACjB,IAAI,CAAC,IAAI;QACP;IACF;IAEA,IAAI,WAAW;QACb,MAAM,GAAG,GAAG,CAAC,kBAAkB;YAAE,KAAK;YAAY,OAAO;QAAU;IACrE;IAEA,IAAI,cAAc;QAChB,MAAM,GAAG,GAAG,CAAC,eAAe;YAAE,KAAK;YAAY,OAAO;QAAa;IACrE;AACF","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/fhevm/internal/fhevm.ts"],"sourcesContent":["import { isAddress, Eip1193Provider, JsonRpcProvider } from \"ethers\";\nimport type {\n  FhevmInitSDKOptions,\n  FhevmInitSDKType,\n  FhevmLoadSDKType,\n  FhevmWindowType,\n} from \"./fhevmTypes\";\nimport { isFhevmWindowType, RelayerSDKLoader } from \"./RelayerSDKLoader\";\nimport { publicKeyStorageGet, publicKeyStorageSet } from \"./PublicKeyStorage\";\nimport { FhevmInstance, FhevmInstanceConfig } from \"../fhevmTypes\";\n\nexport class FhevmReactError extends Error {\n  code: string;\n  constructor(code: string, message?: string, options?: ErrorOptions) {\n    super(message, options);\n    this.code = code;\n    this.name = \"FhevmReactError\";\n  }\n}\n\nfunction throwFhevmError(\n  code: string,\n  message?: string,\n  cause?: unknown\n): never {\n  throw new FhevmReactError(code, message, cause ? { cause } : undefined);\n}\n\nconst isFhevmInitialized = (): boolean => {\n  if (!isFhevmWindowType(window, console.log)) {\n    return false;\n  }\n  return window.relayerSDK.__initialized__ === true;\n};\n\nconst fhevmLoadSDK: FhevmLoadSDKType = () => {\n  const loader = new RelayerSDKLoader({ trace: console.log });\n  return loader.load();\n};\n\nconst fhevmInitSDK: FhevmInitSDKType = async (\n  options?: FhevmInitSDKOptions\n) => {\n  if (!isFhevmWindowType(window, console.log)) {\n    throw new Error(\"window.relayerSDK is not available\");\n  }\n  const result = await window.relayerSDK.initSDK(options);\n  window.relayerSDK.__initialized__ = result;\n  if (!result) {\n    throw new Error(\"window.relayerSDK.initSDK failed.\");\n  }\n  return true;\n};\n\nfunction checkIsAddress(a: unknown): a is `0x${string}` {\n  if (typeof a !== \"string\") {\n    return false;\n  }\n  if (!isAddress(a)) {\n    return false;\n  }\n  return true;\n}\n\nexport class FhevmAbortError extends Error {\n  constructor(message = \"FHEVM operation was cancelled\") {\n    super(message);\n    this.name = \"FhevmAbortError\";\n  }\n}\n\ntype FhevmRelayerStatusType =\n  | \"sdk-loading\"\n  | \"sdk-loaded\"\n  | \"sdk-initializing\"\n  | \"sdk-initialized\"\n  | \"creating\";\n\nasync function getChainId(\n  providerOrUrl: Eip1193Provider | string\n): Promise<number> {\n  if (typeof providerOrUrl === \"string\") {\n    const provider = new JsonRpcProvider(providerOrUrl);\n    return Number((await provider.getNetwork()).chainId);\n  }\n  const chainId = await providerOrUrl.request({ method: \"eth_chainId\" });\n  return Number.parseInt(chainId as string, 16);\n}\n\nasync function getWeb3Client(rpcUrl: string) {\n  const rpc = new JsonRpcProvider(rpcUrl);\n  try {\n    const version = await rpc.send(\"web3_clientVersion\", []);\n    return version;\n  } catch (e) {\n    throwFhevmError(\n      \"WEB3_CLIENTVERSION_ERROR\",\n      `The URL ${rpcUrl} is not a Web3 node or is not reachable. Please check the endpoint.`,\n      e\n    );\n  } finally {\n    rpc.destroy();\n  }\n}\n\nasync function tryFetchFHEVMHardhatNodeRelayerMetadata(rpcUrl: string): Promise<\n  | {\n      ACLAddress: `0x${string}`;\n      InputVerifierAddress: `0x${string}`;\n      KMSVerifierAddress: `0x${string}`;\n    }\n  | undefined\n> {\n  const version = await getWeb3Client(rpcUrl);\n  if (\n    typeof version !== \"string\" ||\n    !version.toLowerCase().includes(\"hardhat\")\n  ) {\n    // Not a Hardhat Node\n    return undefined;\n  }\n  try {\n    const metadata = await getFHEVMRelayerMetadata(rpcUrl);\n    if (!metadata || typeof metadata !== \"object\") {\n      return undefined;\n    }\n    if (\n      !(\n        \"ACLAddress\" in metadata &&\n        typeof metadata.ACLAddress === \"string\" &&\n        metadata.ACLAddress.startsWith(\"0x\")\n      )\n    ) {\n      return undefined;\n    }\n    if (\n      !(\n        \"InputVerifierAddress\" in metadata &&\n        typeof metadata.InputVerifierAddress === \"string\" &&\n        metadata.InputVerifierAddress.startsWith(\"0x\")\n      )\n    ) {\n      return undefined;\n    }\n    if (\n      !(\n        \"KMSVerifierAddress\" in metadata &&\n        typeof metadata.KMSVerifierAddress === \"string\" &&\n        metadata.KMSVerifierAddress.startsWith(\"0x\")\n      )\n    ) {\n      return undefined;\n    }\n    return metadata;\n  } catch {\n    // Not a FHEVM Hardhat Node\n    return undefined;\n  }\n}\n\nasync function getFHEVMRelayerMetadata(rpcUrl: string) {\n  const rpc = new JsonRpcProvider(rpcUrl);\n  try {\n    const version = await rpc.send(\"fhevm_relayer_metadata\", []);\n    return version;\n  } catch (e) {\n    throwFhevmError(\n      \"FHEVM_RELAYER_METADATA_ERROR\",\n      `The URL ${rpcUrl} is not a FHEVM Hardhat node or is not reachable. Please check the endpoint.`,\n      e\n    );\n  } finally {\n    rpc.destroy();\n  }\n}\n\ntype MockResolveResult = { isMock: true; chainId: number; rpcUrl: string };\ntype GenericResolveResult = { isMock: false; chainId: number; rpcUrl?: string };\ntype ResolveResult = MockResolveResult | GenericResolveResult;\n\nasync function resolve(\n  providerOrUrl: Eip1193Provider | string,\n  mockChains?: Record<number, string>\n): Promise<ResolveResult> {\n  // Resolve chainId\n  const chainId = await getChainId(providerOrUrl);\n\n  // Resolve rpc url\n  let rpcUrl = typeof providerOrUrl === \"string\" ? providerOrUrl : undefined;\n\n  const _mockChains: Record<number, string> = {\n    31337: \"http://localhost:8545\",\n    ...(mockChains ?? {}),\n  };\n\n  // Help Typescript solver here:\n  if (Object.hasOwn(_mockChains, chainId)) {\n    if (!rpcUrl) {\n      rpcUrl = _mockChains[chainId];\n    }\n\n    return { isMock: true, chainId, rpcUrl };\n  }\n\n  return { isMock: false, chainId, rpcUrl };\n}\n\nexport const createFhevmInstance = async (parameters: {\n  provider: Eip1193Provider | string;\n  mockChains?: Record<number, string>;\n  signal: AbortSignal;\n  onStatusChange?: (status: FhevmRelayerStatusType) => void;\n}): Promise<FhevmInstance> => {\n  const throwIfAborted = () => {\n    if (signal.aborted) throw new FhevmAbortError();\n  };\n\n  const notify = (status: FhevmRelayerStatusType) => {\n    if (onStatusChange) onStatusChange(status);\n  };\n\n  const {\n    signal,\n    onStatusChange,\n    provider: providerOrUrl,\n    mockChains,\n  } = parameters;\n\n  // Resolve chainId\n  const { isMock, rpcUrl, chainId } = await resolve(providerOrUrl, mockChains);\n\n  if (isMock) {\n    // Throws an error if cannot connect or url does not refer to a Web3 client\n    const fhevmRelayerMetadata =\n      await tryFetchFHEVMHardhatNodeRelayerMetadata(rpcUrl);\n\n    if (fhevmRelayerMetadata) {\n      // fhevmRelayerMetadata is defined, which means rpcUrl refers to a FHEVM Hardhat Node\n      notify(\"creating\");\n\n      //////////////////////////////////////////////////////////////////////////\n      // \n      // WARNING!!\n      // ALWAY USE DYNAMIC IMPORT TO AVOID INCLUDING THE ENTIRE FHEVM MOCK LIB \n      // IN THE FINAL PRODUCTION BUNDLE!!\n      // \n      //////////////////////////////////////////////////////////////////////////\n      const fhevmMock = await import(\"./mock/fhevmMock\");\n      const mockInstance = await fhevmMock.fhevmMockCreateInstance({\n        rpcUrl,\n        chainId,\n        metadata: fhevmRelayerMetadata,\n      });\n\n      throwIfAborted();\n\n      return mockInstance;\n    }\n  }\n\n  throwIfAborted();\n\n  if (!isFhevmWindowType(window, console.log)) {\n    notify(\"sdk-loading\");\n\n    // throws an error if failed\n    await fhevmLoadSDK();\n    throwIfAborted();\n\n    notify(\"sdk-loaded\");\n  }\n\n  // notify that state === \"sdk-loaded\"\n\n  if (!isFhevmInitialized()) {\n    notify(\"sdk-initializing\");\n\n    // throws an error if failed\n    await fhevmInitSDK();\n    throwIfAborted();\n\n    notify(\"sdk-initialized\");\n  }\n\n  const relayerSDK = (window as unknown as FhevmWindowType).relayerSDK;\n\n  const aclAddress = relayerSDK.SepoliaConfig.aclContractAddress;\n  if (!checkIsAddress(aclAddress)) {\n    throw new Error(`Invalid address: ${aclAddress}`);\n  }\n\n  const pub = await publicKeyStorageGet(aclAddress);\n  throwIfAborted();\n\n  const config: FhevmInstanceConfig = {\n    ...relayerSDK.SepoliaConfig,\n    network: providerOrUrl,\n    publicKey: pub.publicKey,\n    publicParams: pub.publicParams,\n  };\n\n  // notify that state === \"creating\"\n  notify(\"creating\");\n\n  const instance = await relayerSDK.createInstance(config);\n\n  // Save the key even if aborted\n  await publicKeyStorageSet(\n    aclAddress,\n    instance.getPublicKey(),\n    instance.getPublicParams(2048)\n  );\n\n  throwIfAborted();\n\n  return instance;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/fhevm/useFhevm.tsx"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport type { FhevmInstance } from \"./fhevmTypes\";\nimport { createFhevmInstance } from \"./internal/fhevm\";\n\nfunction _assert(condition: boolean, message?: string): asserts condition {\n  if (!condition) {\n    const m = message ? `Assertion failed: ${message}` : `Assertion failed.`;\n    console.error(m);\n    throw new Error(m);\n  }\n}\n\nexport type FhevmGoState = \"idle\" | \"loading\" | \"ready\" | \"error\";\n\nexport function useFhevm(parameters: {\n  provider: string | ethers.Eip1193Provider | undefined;\n  chainId: number | undefined;\n  enabled?: boolean;\n  initialMockChains?: Readonly<Record<number, string>>;  \n}): {\n  instance: FhevmInstance | undefined;\n  refresh: () => void;\n  error: Error | undefined;\n  status: FhevmGoState;\n} {\n  const { provider, chainId, initialMockChains, enabled = true } = parameters;\n\n  const [instance, _setInstance] = useState<FhevmInstance | undefined>(\n    undefined\n  );\n  const [status, _setStatus] = useState<FhevmGoState>(\"idle\");\n  const [error, _setError] = useState<Error | undefined>(undefined);\n  const [_isRunning, _setIsRunning] = useState<boolean>(enabled);\n  const [_providerChanged, _setProviderChanged] = useState<number>(0);\n  const _abortControllerRef = useRef<AbortController | null>(null);\n  const _providerRef = useRef<string | ethers.Eip1193Provider | undefined>(\n    provider\n  );\n  const _chainIdRef = useRef<number | undefined>(chainId);\n  const _mockChainsRef = useRef<Record<number, string> | undefined>(\n    initialMockChains\n  );\n\n  const refresh = useCallback(() => {\n    // Provider or chainId has changed. Abort immediately\n    if (_abortControllerRef.current) {\n      // Make sure _providerRef.current + _chainIdRef.current are undefined during abort\n      _providerRef.current = undefined;\n      _chainIdRef.current = undefined;\n\n      _abortControllerRef.current.abort();\n      _abortControllerRef.current = null;\n    }\n\n    _providerRef.current = provider;\n    _chainIdRef.current = chainId;\n\n    // Nullify instance immediately\n    _setInstance(undefined);\n    _setError(undefined);\n    _setStatus(\"idle\");\n\n    if (provider !== undefined) {\n      // Force call main useEffect\n      _setProviderChanged((prev) => prev + 1);\n    }\n\n    // Do not modify the running flag.\n  }, [provider, chainId]);\n\n  // Merge in main useEffect!!!\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  useEffect(() => {\n    _setIsRunning(enabled);\n  }, [enabled]);\n\n  // Main useEffect\n  useEffect(() => {\n    // is _providerRef.current valid here ?\n    // even if the first useEffect is rendered in the same render-cycle ?\n    if (_isRunning === false) {\n      // cancelled\n      console.log(\"cancelled\");\n      if (_abortControllerRef.current) {\n        _abortControllerRef.current.abort();\n        _abortControllerRef.current = null;\n      }\n      // May already be null if provider was changed in the previous render-cycle\n      _setInstance(undefined);\n      _setError(undefined);\n      _setStatus(\"idle\");\n      return;\n    }\n\n    if (_isRunning === true) {\n      if (_providerRef.current === undefined) {\n        // instance should be undefined\n        // this code below should be unecessary\n        _setInstance(undefined);\n        _setError(undefined);\n        _setStatus(\"idle\");\n        return;\n      }\n\n      if (!_abortControllerRef.current) {\n        _abortControllerRef.current = new AbortController();\n      }\n\n      _assert(\n        !_abortControllerRef.current.signal.aborted,\n        \"!controllerRef.current.signal.aborted\"\n      );\n\n      // Keep old instance\n      // Was set to undefined if provider changed\n      _setStatus(\"loading\");\n      _setError(undefined);\n\n      const thisSignal = _abortControllerRef.current.signal;\n      const thisProvider = _providerRef.current;\n      // Can be undefined, if so, call eth_chainId\n      const thisRpcUrlsByChainId = _mockChainsRef.current;\n\n      createFhevmInstance({\n        signal: thisSignal,\n        provider: thisProvider,\n        mockChains: thisRpcUrlsByChainId,\n        onStatusChange: (s) =>\n          console.log(`[useFhevm] createFhevmInstance status changed: ${s}`),\n      })\n        .then((i) => {\n          console.log(`[useFhevm] createFhevmInstance created!`);\n          //console.log(`completed (runId=${thisRunId})...`);\n          if (thisSignal.aborted) return;\n\n          // is there a edge case where the assert below would fail ?\n          // it's not possible to have a _providerRef modified without a prior abort\n          _assert(\n            thisProvider === _providerRef.current,\n            \"thisProvider === _providerRef.current\"\n          );\n\n          _setInstance(i);\n          _setError(undefined);\n          _setStatus(\"ready\");\n        })\n        .catch((e) => {\n          console.log(`Error Was thrown !!! error... ` + e.name);\n          if (thisSignal.aborted) return;\n\n          // it's not possible to have a _providerRef modified without a prior abort\n          _assert(\n            thisProvider === _providerRef.current,\n            \"thisProvider === _providerRef.current\"\n          );\n\n          _setInstance(undefined);\n          _setError(e);\n          _setStatus(\"error\");\n        });\n    }\n  }, [_isRunning, _providerChanged]);\n\n  return { instance, refresh, error, status };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/hooks/useInMemoryStorage.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useCallback } from \"react\";\nimport { GenericStringStorage } from \"@/fhevm/GenericStringStorage\";\n\nexport function useInMemoryStorage(): { storage: GenericStringStorage } {\n  const [storageMap] = useState<Map<string, string>>(new Map());\n\n  const storage: GenericStringStorage = {\n    getItem: useCallback(async (key: string): Promise<string | null> => {\n      return storageMap.get(key) || null;\n    }, [storageMap]),\n\n    setItem: useCallback(async (key: string, value: string): Promise<void> => {\n      storageMap.set(key, value);\n    }, [storageMap]),\n\n    removeItem: useCallback(async (key: string): Promise<void> => {\n      storageMap.delete(key);\n    }, [storageMap]),\n  };\n\n  return { storage };\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAKO,SAAS;IACd,MAAM,CAAC,WAAW,GAAG,IAAA,iNAAQ,EAAsB,IAAI;IAEvD,MAAM,UAAgC;QACpC,SAAS,IAAA,oNAAW,EAAC,OAAO;YAC1B,OAAO,WAAW,GAAG,CAAC,QAAQ;QAChC,GAAG;YAAC;SAAW;QAEf,SAAS,IAAA,oNAAW,EAAC,OAAO,KAAa;YACvC,WAAW,GAAG,CAAC,KAAK;QACtB,GAAG;YAAC;SAAW;QAEf,YAAY,IAAA,oNAAW,EAAC,OAAO;YAC7B,WAAW,MAAM,CAAC;QACpB,GAAG;YAAC;SAAW;IACjB;IAEA,OAAO;QAAE;IAAQ;AACnB","debugId":null}},
    {"offset": {"line": 710, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/hooks/useMetaMask.tsx"],"sourcesContent":["\"use client\";\n\nimport { ethers } from \"ethers\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport type MetaMaskState = \"idle\" | \"connecting\" | \"connected\" | \"error\";\n\nexport function useMetaMask() {\n  const [provider, setProvider] = useState<ethers.Eip1193Provider | undefined>(undefined);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n  const [accounts, setAccounts] = useState<string[] | undefined>(undefined);\n  const [isConnected, setIsConnected] = useState<boolean>(false);\n  const [status, setStatus] = useState<MetaMaskState>(\"idle\");\n  const [error, setError] = useState<Error | undefined>(undefined);\n  const [ethersSigner, setEthersSigner] = useState<ethers.JsonRpcSigner | undefined>(undefined);\n  const [ethersReadonlyProvider, setEthersReadonlyProvider] = useState<ethers.ContractRunner | undefined>(undefined);\n\n  const sameChain = useRef<(chainId: number | undefined) => boolean>(() => false);\n  const sameSigner = useRef<(ethersSigner: ethers.JsonRpcSigner | undefined) => boolean>(() => false);\n  const initialMockChains = useRef<Record<number, string>>({ 31337: \"http://localhost:8545\" });\n\n  // Update refs when values change\n  useEffect(() => {\n    const currentChainId = chainId;\n    sameChain.current = (id: number | undefined) => id === currentChainId;\n  }, [chainId]);\n\n  useEffect(() => {\n    const currentSigner = ethersSigner;\n    sameSigner.current = (signer: ethers.JsonRpcSigner | undefined) => signer === currentSigner;\n  }, [ethersSigner]);\n\n  // Initialize MetaMask connection\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && window.ethereum) {\n      const ethereum = window.ethereum as ethers.Eip1193Provider;\n      setProvider(ethereum);\n\n      // Check if already connected\n      ethereum.request({ method: \"eth_accounts\" })\n        .then((accounts: string[]) => {\n          if (accounts.length > 0) {\n            setAccounts(accounts);\n            setIsConnected(true);\n            updateChainId(ethereum);\n            setupProviders(ethereum);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Failed to get accounts:\", error);\n        });\n\n      // Listen for account changes\n      const handleAccountsChanged = (accounts: string[]) => {\n        setAccounts(accounts);\n        setIsConnected(accounts.length > 0);\n        if (accounts.length > 0) {\n          setupProviders(ethereum);\n        } else {\n          setEthersSigner(undefined);\n          setEthersReadonlyProvider(undefined);\n        }\n      };\n\n      // Listen for chain changes\n      const handleChainChanged = (chainId: string) => {\n        const newChainId = parseInt(chainId, 16);\n        setChainId(newChainId);\n        if (isConnected) {\n          setupProviders(ethereum);\n        }\n      };\n\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      ethereum.on(\"chainChanged\", handleChainChanged);\n\n      return () => {\n        ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n        ethereum.removeListener(\"chainChanged\", handleChainChanged);\n      };\n    }\n  }, [isConnected]);\n\n  const updateChainId = async (ethereum: ethers.Eip1193Provider) => {\n    try {\n      const chainId = await ethereum.request({ method: \"eth_chainId\" });\n      setChainId(parseInt(chainId as string, 16));\n    } catch (error) {\n      console.error(\"Failed to get chain ID:\", error);\n    }\n  };\n\n  const setupProviders = async (ethereum: ethers.Eip1193Provider) => {\n    try {\n      const browserProvider = new ethers.BrowserProvider(ethereum);\n      const signer = await browserProvider.getSigner();\n      setEthersSigner(signer);\n      setEthersReadonlyProvider(browserProvider);\n    } catch (error) {\n      console.error(\"Failed to setup providers:\", error);\n      setError(error as Error);\n    }\n  };\n\n  const connect = useCallback(async () => {\n    if (!provider) {\n      setError(new Error(\"MetaMask not detected\"));\n      setStatus(\"error\");\n      return;\n    }\n\n    try {\n      setStatus(\"connecting\");\n      setError(undefined);\n\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\",\n      }) as string[];\n\n      setAccounts(accounts);\n      setIsConnected(accounts.length > 0);\n      await updateChainId(provider);\n      await setupProviders(provider);\n      setStatus(\"connected\");\n    } catch (error) {\n      console.error(\"Failed to connect:\", error);\n      setError(error as Error);\n      setStatus(\"error\");\n    }\n  }, [provider]);\n\n  const disconnect = useCallback(() => {\n    setAccounts(undefined);\n    setIsConnected(false);\n    setEthersSigner(undefined);\n    setEthersReadonlyProvider(undefined);\n    setStatus(\"idle\");\n    setError(undefined);\n  }, []);\n\n  const switchToChain = useCallback(async (targetChainId: number) => {\n    if (!provider) return;\n\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: `0x${targetChainId.toString(16)}` }],\n      });\n    } catch (error: any) {\n      // If the chain doesn't exist, add it (for localhost)\n      if (error.code === 4902 && targetChainId === 31337) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: \"0x7a69\",\n              chainName: \"Hardhat Local\",\n              nativeCurrency: {\n                name: \"ETH\",\n                symbol: \"ETH\",\n                decimals: 18,\n              },\n              rpcUrls: [\"http://localhost:8545\"],\n            }],\n          });\n        } catch (addError) {\n          console.error(\"Failed to add chain:\", addError);\n          throw addError;\n        }\n      } else {\n        throw error;\n      }\n    }\n  }, [provider]);\n\n  return {\n    provider,\n    chainId,\n    accounts,\n    isConnected,\n    status,\n    error,\n    ethersSigner,\n    ethersReadonlyProvider,\n    sameChain,\n    sameSigner,\n    initialMockChains: initialMockChains.current,\n    connect,\n    disconnect,\n    switchToChain,\n  };\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;AAOO,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAqC;IAC7E,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAqB;IAC3D,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAuB;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAU;IACxD,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAgB;IACpD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAoB;IACtD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAmC;IACnF,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,IAAA,iNAAQ,EAAoC;IAExG,MAAM,YAAY,IAAA,+MAAM,EAA2C,IAAM;IACzE,MAAM,aAAa,IAAA,+MAAM,EAA8D,IAAM;IAC7F,MAAM,oBAAoB,IAAA,+MAAM,EAAyB;QAAE,OAAO;IAAwB;IAE1F,iCAAiC;IACjC,IAAA,kNAAS,EAAC;QACR,MAAM,iBAAiB;QACvB,UAAU,OAAO,GAAG,CAAC,KAA2B,OAAO;IACzD,GAAG;QAAC;KAAQ;IAEZ,IAAA,kNAAS,EAAC;QACR,MAAM,gBAAgB;QACtB,WAAW,OAAO,GAAG,CAAC,SAA6C,WAAW;IAChF,GAAG;QAAC;KAAa;IAEjB,iCAAiC;IACjC,IAAA,kNAAS,EAAC;QACR;;IA+CF,GAAG;QAAC;KAAY;IAEhB,MAAM,gBAAgB,OAAO;QAC3B,IAAI;YACF,MAAM,UAAU,MAAM,SAAS,OAAO,CAAC;gBAAE,QAAQ;YAAc;YAC/D,WAAW,SAAS,SAAmB;QACzC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,MAAM,kBAAkB,IAAI,0LAAM,CAAC,eAAe,CAAC;YACnD,MAAM,SAAS,MAAM,gBAAgB,SAAS;YAC9C,gBAAgB;YAChB,0BAA0B;QAC5B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,SAAS;QACX;IACF;IAEA,MAAM,UAAU,IAAA,oNAAW,EAAC;QAC1B,IAAI,CAAC,UAAU;YACb,SAAS,IAAI,MAAM;YACnB,UAAU;YACV;QACF;QAEA,IAAI;YACF,UAAU;YACV,SAAS;YAET,MAAM,WAAW,MAAM,SAAS,OAAO,CAAC;gBACtC,QAAQ;YACV;YAEA,YAAY;YACZ,eAAe,SAAS,MAAM,GAAG;YACjC,MAAM,cAAc;YACpB,MAAM,eAAe;YACrB,UAAU;QACZ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,SAAS;YACT,UAAU;QACZ;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,aAAa,IAAA,oNAAW,EAAC;QAC7B,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,0BAA0B;QAC1B,UAAU;QACV,SAAS;IACX,GAAG,EAAE;IAEL,MAAM,gBAAgB,IAAA,oNAAW,EAAC,OAAO;QACvC,IAAI,CAAC,UAAU;QAEf,IAAI;YACF,MAAM,SAAS,OAAO,CAAC;gBACrB,QAAQ;gBACR,QAAQ;oBAAC;wBAAE,SAAS,CAAC,EAAE,EAAE,cAAc,QAAQ,CAAC,KAAK;oBAAC;iBAAE;YAC1D;QACF,EAAE,OAAO,OAAY;YACnB,qDAAqD;YACrD,IAAI,MAAM,IAAI,KAAK,QAAQ,kBAAkB,OAAO;gBAClD,IAAI;oBACF,MAAM,SAAS,OAAO,CAAC;wBACrB,QAAQ;wBACR,QAAQ;4BAAC;gCACP,SAAS;gCACT,WAAW;gCACX,gBAAgB;oCACd,MAAM;oCACN,QAAQ;oCACR,UAAU;gCACZ;gCACA,SAAS;oCAAC;iCAAwB;4BACpC;yBAAE;oBACJ;gBACF,EAAE,OAAO,UAAU;oBACjB,QAAQ,KAAK,CAAC,wBAAwB;oBACtC,MAAM;gBACR;YACF,OAAO;gBACL,MAAM;YACR;QACF;IACF,GAAG;QAAC;KAAS;IAEb,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,mBAAmB,kBAAkB,OAAO;QAC5C;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/fhevm/FhevmDecryptionSignature.ts"],"sourcesContent":["import { ethers } from \"ethers\";\nimport {\n  EIP712Type,\n  FhevmDecryptionSignatureType,\n  FhevmInstance,\n} from \"./fhevmTypes\";\nimport { GenericStringStorage } from \"./GenericStringStorage\";\n\nfunction _timestampNow(): number {\n  return Math.floor(Date.now() / 1000);\n}\n\nclass FhevmDecryptionSignatureStorageKey {\n  #contractAddresses: `0x${string}`[];\n  #userAddress: `0x${string}`;\n  #publicKey: string | undefined;\n  #key: string;\n\n  constructor(\n    instance: FhevmInstance,\n    contractAddresses: string[],\n    userAddress: string,\n    publicKey?: string\n  ) {\n    if (!ethers.isAddress(userAddress)) {\n      throw new TypeError(`Invalid address ${userAddress}`);\n    }\n\n    const sortedContractAddresses = (\n      contractAddresses as `0x${string}`[]\n    ).sort();\n\n    const emptyEIP712 = instance.createEIP712(\n      publicKey ?? ethers.ZeroAddress,\n      sortedContractAddresses,\n      0,\n      0\n    );\n\n    try {\n      const hash = ethers.TypedDataEncoder.hash(\n        emptyEIP712.domain,\n        { UserDecryptRequestVerification: emptyEIP712.types.UserDecryptRequestVerification },\n        emptyEIP712.message\n      );\n\n      this.#contractAddresses = sortedContractAddresses;\n      this.#userAddress = userAddress as `0x${string}`;\n\n      this.#key = `${userAddress}:${hash}`;\n    } catch (e) {\n      console.log(e);\n      throw e;\n    }\n  }\n\n  get contractAddresses(): `0x${string}`[] {\n    return this.#contractAddresses;\n  }\n\n  get userAddress(): `0x${string}` {\n    return this.#userAddress;\n  }\n\n  get publicKey(): string | undefined {\n    return this.#publicKey;\n  }\n\n  get key(): string {\n    return this.#key;\n  }\n}\n\nexport class FhevmDecryptionSignature {\n  #publicKey: string;\n  #privateKey: string;\n  #signature: string;\n  #startTimestamp: number; // Unix timestamp in seconds\n  #durationDays: number;\n  #userAddress: `0x${string}`;\n  #contractAddresses: `0x${string}`[];\n  #eip712: EIP712Type;\n\n  private constructor(parameters: FhevmDecryptionSignatureType) {\n    if (!FhevmDecryptionSignature.checkIs(parameters)) {\n      throw new TypeError(\"Invalid FhevmDecryptionSignatureType\");\n    }\n    this.#publicKey = parameters.publicKey;\n    this.#privateKey = parameters.privateKey;\n    this.#signature = parameters.signature;\n    this.#startTimestamp = parameters.startTimestamp;\n    this.#durationDays = parameters.durationDays;\n    this.#userAddress = parameters.userAddress;\n    this.#contractAddresses = parameters.contractAddresses;\n    this.#eip712 = parameters.eip712;\n  }\n\n  public get privateKey() {\n    return this.#privateKey;\n  }\n\n  public get publicKey() {\n    return this.#publicKey;\n  }\n\n  public get signature() {\n    return this.#signature;\n  }\n\n  public get contractAddresses() {\n    return this.#contractAddresses;\n  }\n\n  public get startTimestamp() {\n    return this.#startTimestamp;\n  }\n\n  public get durationDays() {\n    return this.#durationDays;\n  }\n\n  public get userAddress() {\n    return this.#userAddress;\n  }\n\n  static checkIs(s: unknown): s is FhevmDecryptionSignatureType {\n    if (!s || typeof s !== \"object\") {\n      return false;\n    }\n    if (!(\"publicKey\" in s && typeof s.publicKey === \"string\")) {\n      return false;\n    }\n    if (!(\"privateKey\" in s && typeof s.privateKey === \"string\")) {\n      return false;\n    }\n    if (!(\"signature\" in s && typeof s.signature === \"string\")) {\n      return false;\n    }\n    if (!(\"startTimestamp\" in s && typeof s.startTimestamp === \"number\")) {\n      return false;\n    }\n    if (!(\"durationDays\" in s && typeof s.durationDays === \"number\")) {\n      return false;\n    }\n    if (!(\"contractAddresses\" in s && Array.isArray(s.contractAddresses))) {\n      return false;\n    }\n    for (let i = 0; i < s.contractAddresses.length; ++i) {\n      if (typeof s.contractAddresses[i] !== \"string\") return false;\n      if (!s.contractAddresses[i].startsWith(\"0x\")) return false;\n    }\n    if (\n      !(\n        \"userAddress\" in s &&\n        typeof s.userAddress === \"string\" &&\n        s.userAddress.startsWith(\"0x\")\n      )\n    ) {\n      return false;\n    }\n    if (!(\"eip712\" in s && typeof s.eip712 === \"object\" && s.eip712 !== null)) {\n      return false;\n    }\n\n    // Partial type check\n    if (!(\"domain\" in s.eip712 && typeof s.eip712.domain === \"object\")) {\n      return false;\n    }\n    if (\n      !(\"primaryType\" in s.eip712 && typeof s.eip712.primaryType === \"string\")\n    ) {\n      return false;\n    }\n    if (!(\"message\" in s.eip712)) {\n      return false;\n    }\n    if (\n      !(\n        \"types\" in s.eip712 &&\n        typeof s.eip712.types === \"object\" &&\n        s.eip712.types !== null\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  toJSON() {\n    return {\n      publicKey: this.#publicKey,\n      privateKey: this.#privateKey,\n      signature: this.#signature,\n      startTimestamp: this.#startTimestamp,\n      durationDays: this.#durationDays,\n      userAddress: this.#userAddress,\n      contractAddresses: this.#contractAddresses,\n      eip712: this.#eip712,\n    };\n  }\n\n  static fromJSON(json: unknown) {\n    const data = typeof json === \"string\" ? JSON.parse(json) : json;\n    return new FhevmDecryptionSignature(data);\n  }\n\n  equals(s: FhevmDecryptionSignatureType) {\n    return s.signature === this.#signature;\n  }\n\n  isValid(): boolean {\n    return (\n      _timestampNow() < this.#startTimestamp + this.#durationDays * 24 * 60 * 60\n    );\n  }\n\n  async saveToGenericStringStorage(\n    storage: GenericStringStorage,\n    instance: FhevmInstance,\n    withPublicKey: boolean\n  ) {\n    try {\n      const value = JSON.stringify(this);\n\n      const storageKey = new FhevmDecryptionSignatureStorageKey(\n        instance,\n        this.#contractAddresses,\n        this.#userAddress,\n        withPublicKey ? this.#publicKey : undefined\n      );\n      await storage.setItem(storageKey.key, value);\n      console.log(\n        `signature saved! contracts=${this.#contractAddresses.length}`\n      );\n    } catch {\n      console.error(\n        `FhevmDecryptionSignature.saveToGenericStringStorage() failed!`\n      );\n    }\n  }\n\n  static async loadFromGenericStringStorage(\n    storage: GenericStringStorage,\n    instance: FhevmInstance,\n    contractAddresses: string[],\n    userAddress: string,\n    publicKey?: string\n  ): Promise<FhevmDecryptionSignature | null> {\n    try {\n      const storageKey = new FhevmDecryptionSignatureStorageKey(\n        instance,\n        contractAddresses,\n        userAddress,\n        publicKey\n      );\n\n      const result = await storage.getItem(storageKey.key);\n\n      if (!result) {\n        console.warn(`Could not load signature! key=${storageKey.key}`);\n        return null;\n      }\n\n      try {\n        const kps = FhevmDecryptionSignature.fromJSON(result);\n        if (!kps.isValid()) {\n          return null;\n        }\n\n        return kps;\n      } catch {\n        return null;\n      }\n    } catch {\n      console.error(\n        `FhevmDecryptionSignature.loadFromGenericStringStorage() failed!`\n      );\n      return null;\n    }\n  }\n\n  static async new(\n    instance: FhevmInstance,\n    contractAddresses: string[],\n    publicKey: string,\n    privateKey: string,\n    signer: ethers.Signer\n  ): Promise<FhevmDecryptionSignature | null> {\n    try {\n      const userAddress = (await signer.getAddress()) as `0x${string}`;\n      const startTimestamp = _timestampNow();\n      const durationDays = 365;\n      const eip712 = instance.createEIP712(\n        publicKey,\n        contractAddresses,\n        startTimestamp,\n        durationDays\n      );\n      const signature = await signer.signTypedData(\n        eip712.domain,\n        { UserDecryptRequestVerification: eip712.types.UserDecryptRequestVerification },\n        eip712.message\n      );\n      return new FhevmDecryptionSignature({\n        publicKey,\n        privateKey,\n        contractAddresses: contractAddresses as `0x${string}`[],\n        startTimestamp,\n        durationDays,\n        signature,\n        eip712: eip712 as EIP712Type,\n        userAddress,\n      });\n    } catch {\n      return null;\n    }\n  }\n\n  static async loadOrSign(\n    instance: FhevmInstance,\n    contractAddresses: string[],\n    signer: ethers.Signer,\n    storage: GenericStringStorage,\n    keyPair?: { publicKey: string; privateKey: string }\n  ): Promise<FhevmDecryptionSignature | null> {\n    const userAddress = (await signer.getAddress()) as `0x${string}`;\n\n    const cached: FhevmDecryptionSignature | null =\n      await FhevmDecryptionSignature.loadFromGenericStringStorage(\n        storage,\n        instance,\n        contractAddresses,\n        userAddress,\n        keyPair?.publicKey\n      );\n\n    if (cached) {\n      return cached;\n    }\n\n    const { publicKey, privateKey } = keyPair ?? instance.generateKeypair();\n\n    const sig = await FhevmDecryptionSignature.new(\n      instance,\n      contractAddresses,\n      publicKey,\n      privateKey,\n      signer\n    );\n\n    if (!sig) {\n      return null;\n    }\n\n    await sig.saveToGenericStringStorage(\n      storage,\n      instance,\n      Boolean(keyPair?.publicKey)\n    );\n\n    return sig;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1102, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/abi/VotingSystemABI.ts"],"sourcesContent":["// This file is auto-generated. Do not edit manually.\nexport const VotingSystemABI = {\n  abi: [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"VoteCast\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"VotingCreated\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"VotingEnded\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"results\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"VotingResultsRevealed\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"_addresses\",\n        \"type\": \"address[]\"\n      }\n    ],\n    \"name\": \"addToWhitelist\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"admins\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_voter\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"canVoteInVoting\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_title\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_description\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string[]\",\n        \"name\": \"_options\",\n        \"type\": \"string[]\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_startTime\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_endTime\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"_isPublic\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"createVoting\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"endVoting\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_optionIndex\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getEncryptedVoteCount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"euint32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getTotalVotings\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getVotingInfo\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"description\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string[]\",\n        \"name\": \"options\",\n        \"type\": \"string[]\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"startTime\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"endTime\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isActive\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isPublic\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalVotes\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_voter\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"hasVoted\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"makeResultsPublic\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"protocolId\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"_addresses\",\n        \"type\": \"address[]\"\n      }\n    ],\n    \"name\": \"removeFromWhitelist\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"_isAdmin\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setAdmin\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"externalEuint8\",\n        \"name\": \"_encryptedOption\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_inputProof\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingCounter\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"votings\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"description\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"startTime\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"endTime\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isActive\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isPublic\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalVotes\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n} as const;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1593, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/abi/VotingSystemAddresses.ts"],"sourcesContent":["// This file is auto-generated. Do not edit manually.\nexport const VotingSystemAddresses = {\n  \"31337\": {\n    \"address\": \"0x34248A778Af91b582Dc4E9906a38B9F1dF6cd7AB\",\n    \"chainId\": 31337,\n    \"chainName\": \"localhost\"\n  },\n  \"11155111\": {\n    \"address\": \"0xDa32e98576254785c9DcacCC89337DDb20D6Fdf5\",\n    \"chainId\": 11155111,\n    \"chainName\": \"sepolia\"\n  }\n} as const;\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AAC9C,MAAM,wBAAwB;IACnC,SAAS;QACP,WAAW;QACX,WAAW;QACX,aAAa;IACf;IACA,YAAY;QACV,WAAW;QACX,WAAW;QACX,aAAa;IACf;AACF","debugId":null}},
    {"offset": {"line": 1614, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/hooks/useVotingSystem.tsx"],"sourcesContent":["\"use client\";\n\nimport { ethers } from \"ethers\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { FhevmInstance } from \"@/fhevm/fhevmTypes\";\nimport { GenericStringStorage } from \"@/fhevm/GenericStringStorage\";\nimport { FhevmDecryptionSignature } from \"@/fhevm/FhevmDecryptionSignature\";\n\n// Import generated ABI and addresses\nimport { VotingSystemABI } from \"@/abi/VotingSystemABI\";\nimport { VotingSystemAddresses } from \"@/abi/VotingSystemAddresses\";\n\nexport interface VotingInfo {\n  id: number;\n  title: string;\n  description: string;\n  options: string[];\n  creator: string;\n  startTime: number;\n  endTime: number;\n  isActive: boolean;\n  isPublic: boolean;\n  totalVotes: number;\n}\n\nexport interface VotingResults {\n  votingId: number;\n  results: number[];\n  totalVotes: number;\n}\n\nexport type VotingStatus = \"upcoming\" | \"active\" | \"ended\";\n\nfunction getVotingSystemByChainId(chainId: number | undefined) {\n  if (!chainId) {\n    return { abi: VotingSystemABI.abi };\n  }\n\n  const entry = VotingSystemAddresses[chainId.toString()];\n  \n  if (!entry || !entry.address || entry.address === ethers.ZeroAddress) {\n    return { abi: VotingSystemABI.abi, chainId };\n  }\n\n  return {\n    address: entry.address as `0x${string}`,\n    chainId: entry.chainId ?? chainId,\n    chainName: entry.chainName,\n    abi: VotingSystemABI.abi,\n  };\n}\n\nexport function useVotingSystem(parameters: {\n  instance: FhevmInstance | undefined;\n  fhevmDecryptionSignatureStorage: GenericStringStorage;\n  eip1193Provider: ethers.Eip1193Provider | undefined;\n  chainId: number | undefined;\n  ethersSigner: ethers.JsonRpcSigner | undefined;\n  ethersReadonlyProvider: ethers.ContractRunner | undefined;\n  sameChain: React.RefObject<(chainId: number | undefined) => boolean>;\n  sameSigner: React.RefObject<(ethersSigner: ethers.JsonRpcSigner | undefined) => boolean>;\n}) {\n  const {\n    instance,\n    fhevmDecryptionSignatureStorage,\n    chainId,\n    ethersSigner,\n    ethersReadonlyProvider,\n    sameChain,\n    sameSigner,\n  } = parameters;\n\n  // State\n  const [votings, setVotings] = useState<VotingInfo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n  const [isVoting, setIsVoting] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [votingResults, setVotingResults] = useState<Map<number, VotingResults>>(new Map());\n\n  // Refs\n  const votingSystemRef = useRef<any>(undefined);\n  const isLoadingRef = useRef<boolean>(false);\n  const isCreatingRef = useRef<boolean>(false);\n  const isVotingRef = useRef<boolean>(false);\n\n  // Contract info - memoize to prevent recreation\n  const votingSystem = useMemo(() => {\n    const contract = getVotingSystemByChainId(chainId);\n    votingSystemRef.current = contract;\n    return contract;\n  }, [chainId]);\n\n  // Stable references for contract address and ABI\n  const contractAddress = useMemo(() => votingSystem.address, [votingSystem.address]);\n  const contractABI = useMemo(() => votingSystem.abi, [votingSystem.abi]);\n\n  const isDeployed = useMemo(() => {\n    return Boolean(contractAddress) && contractAddress !== ethers.ZeroAddress;\n  }, [contractAddress]);\n\n  const canInteract = useMemo(() => {\n    return contractAddress && ethersReadonlyProvider && !isLoading;\n  }, [contractAddress, ethersReadonlyProvider, isLoading]);\n\n  const canRead = useMemo(() => {\n    return contractAddress && ethersReadonlyProvider;\n  }, [contractAddress, ethersReadonlyProvider]);\n\n  // Load all votings\n  const loadVotings = useCallback(async () => {\n    if (isLoadingRef.current || !contractAddress || !ethersReadonlyProvider) return;\n\n    isLoadingRef.current = true;\n    setIsLoading(true);\n    setMessage(\"Loading votings...\");\n\n    try {\n      const contract = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        ethersReadonlyProvider\n      );\n\n      const totalVotings = await contract.getTotalVotings();\n      const votingPromises: Promise<VotingInfo>[] = [];\n\n      for (let i = 0; i < totalVotings; i++) {\n        votingPromises.push(\n          contract.getVotingInfo(i).then((info: any) => ({\n            id: i,\n            title: info.title,\n            description: info.description,\n            options: info.options,\n            creator: info.creator,\n            startTime: Number(info.startTime),\n            endTime: Number(info.endTime),\n            isActive: info.isActive,\n            isPublic: info.isPublic,\n            totalVotes: Number(info.totalVotes),\n          }))\n        );\n      }\n\n      const loadedVotings = await Promise.all(votingPromises);\n      setVotings(loadedVotings);\n      setMessage(`Loaded ${loadedVotings.length} votings`);\n    } catch (error) {\n      console.error(\"Failed to load votings:\", error);\n      setMessage(\"Failed to load votings\");\n    } finally {\n      isLoadingRef.current = false;\n      setIsLoading(false);\n    }\n  }, [contractAddress, contractABI, ethersReadonlyProvider]); // Remove canInteract to break circular dependency\n\n  // Create voting\n  const createVoting = useCallback(async (\n    title: string,\n    description: string,\n    options: string[],\n    startTime: number,\n    endTime: number,\n    isPublic: boolean\n  ) => {\n    if (isCreatingRef.current || !ethersSigner || !contractAddress) return;\n\n    isCreatingRef.current = true;\n    setIsCreating(true);\n    setMessage(\"Creating voting...\");\n\n    try {\n      const contract = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        ethersSigner\n      );\n\n      const tx = await contract.createVoting(\n        title,\n        description,\n        options,\n        startTime,\n        endTime,\n        isPublic\n      );\n\n      setMessage(`Transaction submitted: ${tx.hash}`);\n      const receipt = await tx.wait();\n      setMessage(\"Voting created successfully!\");\n\n      // Reload votings\n      setTimeout(() => loadVotings(), 1000); // Async reload to break dependency cycle\n\n      return receipt;\n    } catch (error) {\n      console.error(\"Failed to create voting:\", error);\n      setMessage(\"Failed to create voting\");\n      throw error;\n    } finally {\n      isCreatingRef.current = false;\n      setIsCreating(false);\n    }\n  }, [ethersSigner, contractAddress, contractABI]); // Remove loadVotings dependency\n\n  // Cast vote\n  const castVote = useCallback(async (votingId: number, optionIndex: number) => {\n    if (isVotingRef.current || !instance || !ethersSigner || !contractAddress) return;\n\n    isVotingRef.current = true;\n    setIsVoting(true);\n    setMessage(\"Preparing encrypted vote...\");\n\n    try {\n      // Create encrypted input\n      const input = instance.createEncryptedInput(\n        contractAddress,\n        ethersSigner.address\n      );\n      input.add8(optionIndex);\n\n      setMessage(\"Encrypting vote...\");\n      const encryptedInput = await input.encrypt();\n\n      setMessage(\"Submitting vote...\");\n      const contract = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        ethersSigner\n      );\n\n      const tx = await contract.vote(\n        votingId,\n        encryptedInput.handles[0],\n        encryptedInput.inputProof\n      );\n\n      setMessage(`Transaction submitted: ${tx.hash}`);\n      const receipt = await tx.wait();\n      setMessage(\"Vote cast successfully!\");\n\n      // Reload votings to update vote counts\n      setTimeout(() => loadVotings(), 1000); // Async reload to break dependency cycle\n\n      return receipt;\n    } catch (error) {\n      console.error(\"Failed to cast vote:\", error);\n      setMessage(\"Failed to cast vote\");\n      throw error;\n    } finally {\n      isVotingRef.current = false;\n      setIsVoting(false);\n    }\n  }, [instance, ethersSigner, contractAddress, contractABI]); // Remove loadVotings dependency\n\n  // End voting\n  const endVoting = useCallback(async (votingId: number) => {\n    if (!ethersSigner || !contractAddress) return;\n\n    try {\n      setMessage(\"Ending voting...\");\n      const contract = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        ethersSigner\n      );\n\n      const tx = await contract.endVoting(votingId);\n      setMessage(`Transaction submitted: ${tx.hash}`);\n      \n      const receipt = await tx.wait();\n      setMessage(\"Voting ended successfully!\");\n\n      // Reload votings\n      setTimeout(() => loadVotings(), 1000); // Async reload to break dependency cycle\n\n      return receipt;\n    } catch (error) {\n      console.error(\"Failed to end voting:\", error);\n      setMessage(\"Failed to end voting\");\n      throw error;\n    }\n  }, [ethersSigner, contractAddress, contractABI]); // Remove loadVotings dependency\n\n  // Decrypt voting results (creators have default access)\n  const decryptVotingResults = useCallback(async (votingId: number) => {\n    if (!instance || !ethersSigner || !contractAddress) return;\n\n    try {\n      const contract = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        ethersSigner\n      );\n\n      // Get voting info to check if user is creator\n      const votingInfo = await contract.getVotingInfo(votingId);\n      const isCreator = votingInfo.creator.toLowerCase() === ethersSigner.address.toLowerCase();\n      \n      // If not creator, make results public first\n      if (!isCreator) {\n        setMessage(\"Making results public...\");\n        const makePublicTx = await contract.makeResultsPublic(votingId);\n        setMessage(`Transaction submitted: ${makePublicTx.hash}`);\n        await makePublicTx.wait();\n      }\n      \n      setMessage(\"Preparing decryption...\");\n      const optionsCount = votingInfo.options.length;\n\n      // Get decryption signature\n      const sig = await FhevmDecryptionSignature.loadOrSign(\n        instance,\n        [contractAddress as `0x${string}`],\n        ethersSigner,\n        fhevmDecryptionSignatureStorage\n      );\n\n      if (!sig) {\n        setMessage(\"Unable to build FHEVM decryption signature\");\n        return;\n      }\n\n      setMessage(\"Decrypting results...\");\n\n      // Get encrypted vote counts and decrypt them\n      const decryptPromises = [];\n      for (let i = 0; i < optionsCount; i++) {\n        const encryptedCount = await contract.getEncryptedVoteCount(votingId, i);\n        if (encryptedCount !== ethers.ZeroHash) {\n          decryptPromises.push(\n            instance.userDecrypt(\n              [{ handle: encryptedCount, contractAddress: contractAddress }],\n              sig.privateKey,\n              sig.publicKey,\n              sig.signature,\n              sig.contractAddresses,\n              sig.userAddress,\n              sig.startTimestamp,\n              sig.durationDays\n            ).then(result => Number(result[encryptedCount]))\n          );\n        } else {\n          decryptPromises.push(Promise.resolve(0));\n        }\n      }\n\n      const results = await Promise.all(decryptPromises);\n      const totalVotes = results.reduce((sum, count) => sum + count, 0);\n\n      const votingResults: VotingResults = {\n        votingId,\n        results,\n        totalVotes,\n      };\n\n      setVotingResults(prev => new Map(prev.set(votingId, votingResults)));\n      setMessage(\"Results decrypted successfully!\");\n\n      return votingResults;\n    } catch (error) {\n      console.error(\"Failed to decrypt results:\", error);\n      setMessage(\"Failed to decrypt results: \" + (error as Error).message);\n      throw error;\n    }\n  }, [instance, ethersSigner, contractAddress, contractABI, fhevmDecryptionSignatureStorage]);\n\n  // Check if user has voted\n  const hasVoted = useCallback(async (votingId: number, userAddress: string) => {\n    if (!canInteract) return false;\n\n    try {\n      const contract = new ethers.Contract(\n        contractAddress!,\n        contractABI,\n        ethersReadonlyProvider\n      );\n\n      return await contract.hasVoted(votingId, userAddress);\n    } catch (error) {\n      console.error(\"Failed to check voting status:\", error);\n      return false;\n    }\n  }, [canInteract, contractAddress, contractABI, ethersReadonlyProvider]);\n\n  // Check if user can vote\n  const canVote = useCallback(async (votingId: number, userAddress: string) => {\n    if (!canInteract) return false;\n\n    try {\n      const contract = new ethers.Contract(\n        contractAddress!,\n        contractABI,\n        ethersReadonlyProvider\n      );\n\n      return await contract.canVoteInVoting(votingId, userAddress);\n    } catch (error) {\n      console.error(\"Failed to check voting eligibility:\", error);\n      return false;\n    }\n  }, [canInteract, contractAddress, contractABI, ethersReadonlyProvider]);\n\n  // Get voting status\n  const getVotingStatus = useCallback((voting: VotingInfo): VotingStatus => {\n    const now = Math.floor(Date.now() / 1000);\n    \n    if (!voting.isActive) return \"ended\";\n    if (now < voting.startTime) return \"upcoming\";\n    if (now > voting.endTime) return \"ended\";\n    return \"active\";\n  }, []);\n\n  // Auto-load votings when contract is available\n  useEffect(() => {\n    if (canRead) {\n      loadVotings();\n    }\n  }, [canRead, loadVotings]); // Use stable dependencies\n\n  return {\n    // Contract info\n    contractAddress,\n    isDeployed,\n    canInteract,\n\n    // State\n    votings,\n    votingResults,\n    isLoading,\n    isCreating,\n    isVoting,\n    message,\n\n    // Actions\n    refreshVotings: loadVotings, // Rename to avoid confusion\n    createVoting,\n    castVote,\n    endVoting,\n    decryptVotingResults,\n    hasVoted,\n    canVote,\n    getVotingStatus,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1961, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatTime(timestamp: number): string {\n  return new Date(timestamp * 1000).toLocaleString();\n}\n\nexport function formatTimeRemaining(endTime: number): string {\n  const now = Math.floor(Date.now() / 1000);\n  const remaining = endTime - now;\n  \n  if (remaining <= 0) return \"Ended\";\n  \n  const days = Math.floor(remaining / 86400);\n  const hours = Math.floor((remaining % 86400) / 3600);\n  const minutes = Math.floor((remaining % 3600) / 60);\n  \n  if (days > 0) return `${days}d ${hours}h`;\n  if (hours > 0) return `${hours}h ${minutes}m`;\n  return `${minutes}m`;\n}\n\nexport function truncateAddress(address: string, chars = 4): string {\n  return `${address.slice(0, chars + 2)}...${address.slice(-chars)}`;\n}\n\nexport function getVotingStatusColor(status: string): string {\n  switch (status) {\n    case \"active\":\n      return \"text-green-600 bg-green-100 dark:text-green-400 dark:bg-green-900\";\n    case \"ended\":\n      return \"text-gray-600 bg-gray-100 dark:text-gray-400 dark:bg-gray-900\";\n    case \"upcoming\":\n      return \"text-blue-600 bg-blue-100 dark:text-blue-400 dark:bg-blue-900\";\n    default:\n      return \"text-gray-600 bg-gray-100 dark:text-gray-400 dark:bg-gray-900\";\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,WAAW,SAAiB;IAC1C,OAAO,IAAI,KAAK,YAAY,MAAM,cAAc;AAClD;AAEO,SAAS,oBAAoB,OAAe;IACjD,MAAM,MAAM,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;IACpC,MAAM,YAAY,UAAU;IAE5B,IAAI,aAAa,GAAG,OAAO;IAE3B,MAAM,OAAO,KAAK,KAAK,CAAC,YAAY;IACpC,MAAM,QAAQ,KAAK,KAAK,CAAC,AAAC,YAAY,QAAS;IAC/C,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,YAAY,OAAQ;IAEhD,IAAI,OAAO,GAAG,OAAO,GAAG,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;IACzC,IAAI,QAAQ,GAAG,OAAO,GAAG,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC7C,OAAO,GAAG,QAAQ,CAAC,CAAC;AACtB;AAEO,SAAS,gBAAgB,OAAe,EAAE,QAAQ,CAAC;IACxD,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,QAAQ,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,QAAQ;AACpE;AAEO,SAAS,qBAAqB,MAAc;IACjD,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 2013, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/ui/Card.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { forwardRef } from \"react\";\n\nconst Card = forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,qBAAO,IAAA,mNAAU,EAGrB,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,IAAA,mNAAU,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,IAAA,mNAAU,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,IAAA,mNAAU,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,mNAAU,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,IAAA,mNAAU,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2099, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/ui/Badge.tsx"],"sourcesContent":["\"use client\";\n\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        success:\n          \"border-transparent bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\",\n        warning:\n          \"border-transparent bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\",\n        info:\n          \"border-transparent bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;YACT,SACE;YACF,SACE;YACF,MACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,kHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 2145, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/ui/Button.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,IAAA,mNAAU,EACvB,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,qBACE,8OAAC;QACC,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2203, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/VotingCard.tsx"],"sourcesContent":["\"use client\";\n\nimport { VotingInfo, VotingStatus } from \"@/hooks/useVotingSystem\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/Card\";\nimport { Badge } from \"@/components/ui/Badge\";\nimport { Button } from \"@/components/ui/Button\";\nimport { formatTime, formatTimeRemaining, truncateAddress, getVotingStatusColor } from \"@/lib/utils\";\nimport { useLanguage } from \"@/app/providers\";\nimport { Clock, Users, User, Lock, Globe } from \"lucide-react\";\n\ninterface VotingCardProps {\n  voting: VotingInfo;\n  status: VotingStatus;\n  onVote?: (votingId: number) => void;\n  onViewResults?: (votingId: number) => void;\n  onEndVoting?: (votingId: number) => void;\n  canVote?: boolean;\n  hasVoted?: boolean;\n  isCreator?: boolean;\n  isAdmin?: boolean;\n}\n\nexport function VotingCard({\n  voting,\n  status,\n  onVote,\n  onViewResults,\n  onEndVoting,\n  canVote = false,\n  hasVoted = false,\n  isCreator = false,\n  isAdmin = false,\n}: VotingCardProps) {\n  const { t } = useLanguage();\n\n  const getStatusBadge = () => {\n    const statusText = t(`voting.${status}`);\n    let variant: \"success\" | \"warning\" | \"info\" = \"info\";\n    \n    switch (status) {\n      case \"active\":\n        variant = \"success\";\n        break;\n      case \"ended\":\n        variant = \"warning\";\n        break;\n      case \"upcoming\":\n        variant = \"info\";\n        break;\n    }\n\n    return <Badge variant={variant}>{statusText}</Badge>;\n  };\n\n  const canShowVoteButton = status === \"active\" && canVote && !hasVoted;\n  const canShowEndButton = status === \"active\" && (isCreator || isAdmin);\n  const canShowResults = status === \"ended\" || hasVoted;\n\n  return (\n    <Card className=\"voting-card hover:shadow-lg transition-all duration-200\">\n      <CardHeader>\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <CardTitle className=\"text-xl mb-2\">{voting.title}</CardTitle>\n            <CardDescription className=\"text-sm text-muted-foreground\">\n              {voting.description}\n            </CardDescription>\n          </div>\n          <div className=\"flex flex-col items-end gap-2\">\n            {getStatusBadge()}\n            <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n              {voting.isPublic ? (\n                <>\n                  <Globe className=\"w-3 h-3\" />\n                  <span>{t(\"voting.public\")}</span>\n                </>\n              ) : (\n                <>\n                  <Lock className=\"w-3 h-3\" />\n                  <span>{t(\"voting.private\")}</span>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <div className=\"space-y-4\">\n          {/* Voting Options */}\n          <div>\n            <h4 className=\"font-medium text-sm mb-2\">{t(\"form.options\")}:</h4>\n            <div className=\"grid gap-2\">\n              {voting.options.map((option, index) => (\n                <div\n                  key={index}\n                  className=\"p-2 bg-muted rounded-md text-sm\"\n                >\n                  {index + 1}. {option}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Voting Stats */}\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <Users className=\"w-4 h-4 text-muted-foreground\" />\n              <span>{t(\"voting.total_votes\")}: {voting.totalVotes}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <User className=\"w-4 h-4 text-muted-foreground\" />\n              <span>{t(\"voting.created_by\")}: {truncateAddress(voting.creator)}</span>\n            </div>\n          </div>\n\n          {/* Time Information */}\n          <div className=\"space-y-2 text-sm\">\n            {status === \"upcoming\" && (\n              <div className=\"flex items-center gap-2 text-blue-600\">\n                <Clock className=\"w-4 h-4\" />\n                <span>{t(\"voting.starts_at\")}: {formatTime(voting.startTime)}</span>\n              </div>\n            )}\n            \n            {status === \"active\" && (\n              <div className=\"flex items-center gap-2 text-green-600\">\n                <Clock className=\"w-4 h-4\" />\n                <span>{t(\"voting.time_left\")}: {formatTimeRemaining(voting.endTime)}</span>\n              </div>\n            )}\n            \n            {status === \"ended\" && (\n              <div className=\"flex items-center gap-2 text-gray-600\">\n                <Clock className=\"w-4 h-4\" />\n                <span>{t(\"voting.ends_at\")}: {formatTime(voting.endTime)}</span>\n              </div>\n            )}\n          </div>\n\n          {/* Voting Status Messages */}\n          {hasVoted && status === \"active\" && (\n            <div className=\"p-3 bg-green-50 border border-green-200 rounded-md text-sm text-green-800\">\n              ✅ {t(\"msg.already_voted\")}\n            </div>\n          )}\n\n          {!canVote && status === \"active\" && !hasVoted && (\n            <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded-md text-sm text-yellow-800\">\n              ⚠️ {t(\"msg.not_authorized\")}\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex gap-2 pt-2\">\n            {canShowVoteButton && (\n              <Button\n                onClick={() => onVote?.(voting.id)}\n                className=\"flex-1\"\n                size=\"sm\"\n              >\n                {t(\"voting.vote\")}\n              </Button>\n            )}\n            \n            {status === \"active\" && !canVote && !hasVoted && (\n              <Button\n                disabled\n                variant=\"outline\"\n                className=\"flex-1\"\n                size=\"sm\"\n              >\n                Connect Wallet to Vote\n              </Button>\n            )}\n\n            {canShowResults && (\n              <Button\n                onClick={() => onViewResults?.(voting.id)}\n                variant=\"outline\"\n                className=\"flex-1\"\n                size=\"sm\"\n              >\n                {t(\"voting.results\")}\n              </Button>\n            )}\n\n            {canShowEndButton && (\n              <Button\n                onClick={() => onEndVoting?.(voting.id)}\n                variant=\"destructive\"\n                size=\"sm\"\n              >\n                {t(\"common.end\")}\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2639, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/ui/Input.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { forwardRef } from \"react\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAQA,MAAM,sBAAQ,IAAA,mNAAU,EACtB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,kHAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2668, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/CreateVotingForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/Card\";\nimport { Button } from \"@/components/ui/Button\";\nimport { Input } from \"@/components/ui/Input\";\nimport { useLanguage } from \"@/app/providers\";\nimport { Plus, Minus, Calendar, Globe, Lock } from \"lucide-react\";\n\ninterface CreateVotingFormProps {\n  onSubmit: (data: {\n    title: string;\n    description: string;\n    options: string[];\n    startTime: number;\n    endTime: number;\n    isPublic: boolean;\n  }) => Promise<void>;\n  isLoading?: boolean;\n}\n\nexport function CreateVotingForm({ onSubmit, isLoading = false }: CreateVotingFormProps) {\n  const { t } = useLanguage();\n  \n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [isPublic, setIsPublic] = useState(true);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const addOption = () => {\n    if (options.length < 4) {\n      setOptions([...options, \"\"]);\n    }\n  };\n\n  const removeOption = (index: number) => {\n    if (options.length > 2) {\n      setOptions(options.filter((_, i) => i !== index));\n    }\n  };\n\n  const updateOption = (index: number, value: string) => {\n    const newOptions = [...options];\n    newOptions[index] = value;\n    setOptions(newOptions);\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!title.trim()) {\n      newErrors.title = \"Title is required\";\n    }\n\n    if (!description.trim()) {\n      newErrors.description = \"Description is required\";\n    }\n\n    const validOptions = options.filter(opt => opt.trim());\n    if (validOptions.length < 2) {\n      newErrors.options = \"At least 2 options are required\";\n    }\n\n    if (!startTime) {\n      newErrors.startTime = \"Start time is required\";\n    }\n\n    if (!endTime) {\n      newErrors.endTime = \"End time is required\";\n    }\n\n    if (startTime && endTime) {\n      const start = new Date(startTime).getTime();\n      const end = new Date(endTime).getTime();\n      const now = Date.now();\n\n      if (start <= now) {\n        newErrors.startTime = \"Start time must be in the future\";\n      }\n\n      if (end <= start) {\n        newErrors.endTime = \"End time must be after start time\";\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    const validOptions = options.filter(opt => opt.trim());\n    const startTimestamp = Math.floor(new Date(startTime).getTime() / 1000);\n    const endTimestamp = Math.floor(new Date(endTime).getTime() / 1000);\n\n    try {\n      await onSubmit({\n        title: title.trim(),\n        description: description.trim(),\n        options: validOptions,\n        startTime: startTimestamp,\n        endTime: endTimestamp,\n        isPublic,\n      });\n\n      // Reset form on success\n      setTitle(\"\");\n      setDescription(\"\");\n      setOptions([\"\", \"\"]);\n      setStartTime(\"\");\n      setEndTime(\"\");\n      setIsPublic(true);\n      setErrors({});\n    } catch (error) {\n      console.error(\"Failed to create voting:\", error);\n    }\n  };\n\n  // Set default times (start: now + 1 hour, end: now + 1 day)\n  const setDefaultTimes = () => {\n    const now = new Date();\n    const startDefault = new Date(now.getTime() + 60 * 60 * 1000); // +1 hour\n    const endDefault = new Date(now.getTime() + 24 * 60 * 60 * 1000); // +1 day\n\n    setStartTime(startDefault.toISOString().slice(0, 16));\n    setEndTime(endDefault.toISOString().slice(0, 16));\n  };\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Plus className=\"w-5 h-5\" />\n          {t(\"voting.create\")}\n        </CardTitle>\n        <CardDescription>\n          Create a new confidential voting with encrypted votes\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Title */}\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              {t(\"form.title\")} *\n            </label>\n            <Input\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              placeholder=\"Enter voting title\"\n              className={errors.title ? \"border-red-500\" : \"\"}\n            />\n            {errors.title && (\n              <p className=\"text-red-500 text-xs mt-1\">{errors.title}</p>\n            )}\n          </div>\n\n          {/* Description */}\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              {t(\"form.description\")} *\n            </label>\n            <textarea\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              placeholder=\"Enter voting description\"\n              rows={3}\n              className={`flex w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 ${\n                errors.description ? \"border-red-500\" : \"\"\n              }`}\n            />\n            {errors.description && (\n              <p className=\"text-red-500 text-xs mt-1\">{errors.description}</p>\n            )}\n          </div>\n\n          {/* Options */}\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              {t(\"form.options\")} * (2-4 options)\n            </label>\n            <div className=\"space-y-2\">\n              {options.map((option, index) => (\n                <div key={index} className=\"flex gap-2\">\n                  <Input\n                    value={option}\n                    onChange={(e) => updateOption(index, e.target.value)}\n                    placeholder={`Option ${index + 1}`}\n                    className=\"flex-1\"\n                  />\n                  {options.length > 2 && (\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"icon\"\n                      onClick={() => removeOption(index)}\n                    >\n                      <Minus className=\"w-4 h-4\" />\n                    </Button>\n                  )}\n                </div>\n              ))}\n              {options.length < 4 && (\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={addOption}\n                  className=\"w-full\"\n                >\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  {t(\"form.add_option\")}\n                </Button>\n              )}\n            </div>\n            {errors.options && (\n              <p className=\"text-red-500 text-xs mt-1\">{errors.options}</p>\n            )}\n          </div>\n\n          {/* Time Settings */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                <Calendar className=\"w-4 h-4 inline mr-1\" />\n                {t(\"form.start_time\")} *\n              </label>\n              <Input\n                type=\"datetime-local\"\n                value={startTime}\n                onChange={(e) => setStartTime(e.target.value)}\n                className={errors.startTime ? \"border-red-500\" : \"\"}\n              />\n              {errors.startTime && (\n                <p className=\"text-red-500 text-xs mt-1\">{errors.startTime}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                <Calendar className=\"w-4 h-4 inline mr-1\" />\n                {t(\"form.end_time\")} *\n              </label>\n              <Input\n                type=\"datetime-local\"\n                value={endTime}\n                onChange={(e) => setEndTime(e.target.value)}\n                className={errors.endTime ? \"border-red-500\" : \"\"}\n              />\n              {errors.endTime && (\n                <p className=\"text-red-500 text-xs mt-1\">{errors.endTime}</p>\n              )}\n            </div>\n          </div>\n\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={setDefaultTimes}\n            className=\"w-full\"\n          >\n            Set Default Times (Start: +1h, End: +1d)\n          </Button>\n\n          {/* Voting Type */}\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              {t(\"form.voting_type\")}\n            </label>\n            <div className=\"flex gap-4\">\n              <label className=\"flex items-center gap-2 cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"votingType\"\n                  checked={isPublic}\n                  onChange={() => setIsPublic(true)}\n                  className=\"w-4 h-4\"\n                />\n                <Globe className=\"w-4 h-4\" />\n                <span>{t(\"voting.public\")}</span>\n              </label>\n              <label className=\"flex items-center gap-2 cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"votingType\"\n                  checked={!isPublic}\n                  onChange={() => setIsPublic(false)}\n                  className=\"w-4 h-4\"\n                />\n                <Lock className=\"w-4 h-4\" />\n                <span>{t(\"voting.private\")}</span>\n              </label>\n            </div>\n          </div>\n\n          {/* Submit Button */}\n          <Button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full\"\n            size=\"lg\"\n          >\n            {isLoading ? (\n              <>\n                <div className=\"loading-spinner w-4 h-4 mr-2\" />\n                Creating...\n              </>\n            ) : (\n              <>\n                <Plus className=\"w-4 h-4 mr-2\" />\n                {t(\"voting.create\")}\n              </>\n            )}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3256, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/VoteModal.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { VotingInfo } from \"@/hooks/useVotingSystem\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/Card\";\nimport { Button } from \"@/components/ui/Button\";\nimport { useLanguage } from \"@/app/providers\";\nimport { Vote, X, Check } from \"lucide-react\";\n\ninterface VoteModalProps {\n  voting: VotingInfo;\n  isOpen: boolean;\n  onClose: () => void;\n  onVote: (votingId: number, optionIndex: number) => Promise<void>;\n  isLoading?: boolean;\n}\n\nexport function VoteModal({ voting, isOpen, onClose, onVote, isLoading = false }: VoteModalProps) {\n  const { t } = useLanguage();\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  if (!isOpen) return null;\n\n  const handleSubmit = async () => {\n    if (selectedOption === null) return;\n\n    try {\n      setIsSubmitting(true);\n      await onVote(voting.id, selectedOption);\n      onClose();\n      setSelectedOption(null);\n    } catch (error) {\n      console.error(\"Failed to vote:\", error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClose = () => {\n    if (!isSubmitting) {\n      onClose();\n      setSelectedOption(null);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <Card className=\"w-full max-w-md mx-auto\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Vote className=\"w-5 h-5 text-primary\" />\n              <CardTitle className=\"text-lg\">{t(\"voting.vote\")}</CardTitle>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleClose}\n              disabled={isSubmitting}\n            >\n              <X className=\"w-4 h-4\" />\n            </Button>\n          </div>\n          <CardDescription>\n            {voting.title}\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent className=\"space-y-4\">\n          {/* Voting Description */}\n          <div className=\"p-3 bg-muted rounded-md\">\n            <p className=\"text-sm text-muted-foreground\">{voting.description}</p>\n          </div>\n\n          {/* Options */}\n          <div>\n            <h4 className=\"font-medium text-sm mb-3\">{t(\"form.options\")}:</h4>\n            <div className=\"space-y-2\">\n              {voting.options.map((option, index) => (\n                <button\n                  key={index}\n                  onClick={() => setSelectedOption(index)}\n                  disabled={isSubmitting}\n                  className={`w-full p-4 text-left border rounded-lg transition-all duration-200 ${\n                    selectedOption === index\n                      ? \"border-primary bg-primary/10 text-primary\"\n                      : \"border-border hover:border-primary/50 hover:bg-accent\"\n                  } ${isSubmitting ? \"opacity-50 cursor-not-allowed\" : \"cursor-pointer\"}`}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <div className=\"font-medium\">{option}</div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        {t(\"form.options\")} {index + 1}\n                      </div>\n                    </div>\n                    {selectedOption === index && (\n                      <Check className=\"w-5 h-5 text-primary\" />\n                    )}\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Privacy Notice */}\n          <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-md text-sm text-blue-800 dark:bg-blue-900 dark:text-blue-300 dark:border-blue-800\">\n            🔒 Your vote will be encrypted using FHEVM technology. Your choice will remain completely private and anonymous.\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex gap-3 pt-2\">\n            <Button\n              variant=\"outline\"\n              onClick={handleClose}\n              disabled={isSubmitting}\n              className=\"flex-1\"\n            >\n              {t(\"common.cancel\")}\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              disabled={selectedOption === null || isSubmitting}\n              className=\"flex-1\"\n            >\n              {isSubmitting ? (\n                <>\n                  <div className=\"loading-spinner w-4 h-4 mr-2\" />\n                  Voting...\n                </>\n              ) : (\n                <>\n                  <Vote className=\"w-4 h-4 mr-2\" />\n                  {t(\"voting.vote\")}\n                </>\n              )}\n            </Button>\n          </div>\n\n          {/* Selected Option Confirmation */}\n          {selectedOption !== null && !isSubmitting && (\n            <div className=\"p-3 bg-green-50 border border-green-200 rounded-md text-sm text-green-800 dark:bg-green-900 dark:text-green-300 dark:border-green-800\">\n              ✅ Selected: {voting.options[selectedOption]}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAPA;;;;;;;AAiBO,SAAS,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,KAAK,EAAkB;IAC9F,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,gIAAW;IACzB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAAgB;IACpE,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IAEjD,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,eAAe;QACnB,IAAI,mBAAmB,MAAM;QAE7B,IAAI;YACF,gBAAgB;YAChB,MAAM,OAAO,OAAO,EAAE,EAAE;YACxB;YACA,kBAAkB;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mBAAmB;QACnC,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,cAAc;YACjB;YACA,kBAAkB;QACpB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,iIAAI;YAAC,WAAU;;8BACd,8OAAC,uIAAU;;sCACT,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,0MAAI;4CAAC,WAAU;;;;;;sDAChB,8OAAC,sIAAS;4CAAC,WAAU;sDAAW,EAAE;;;;;;;;;;;;8CAEpC,8OAAC,qIAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,SAAS;oCACT,UAAU;8CAEV,cAAA,8OAAC,iMAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAGjB,8OAAC,4IAAe;sCACb,OAAO,KAAK;;;;;;;;;;;;8BAIjB,8OAAC,wIAAW;oBAAC,WAAU;;sCAErB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;0CAAiC,OAAO,WAAW;;;;;;;;;;;sCAIlE,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;;wCAA4B,EAAE;wCAAgB;;;;;;;8CAC5D,8OAAC;oCAAI,WAAU;8CACZ,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBAC3B,8OAAC;4CAEC,SAAS,IAAM,kBAAkB;4CACjC,UAAU;4CACV,WAAW,CAAC,mEAAmE,EAC7E,mBAAmB,QACf,8CACA,wDACL,CAAC,EAAE,eAAe,kCAAkC,kBAAkB;sDAEvE,cAAA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;;0EACC,8OAAC;gEAAI,WAAU;0EAAe;;;;;;0EAC9B,8OAAC;gEAAI,WAAU;;oEACZ,EAAE;oEAAgB;oEAAE,QAAQ;;;;;;;;;;;;;oDAGhC,mBAAmB,uBAClB,8OAAC,6MAAK;wDAAC,WAAU;;;;;;;;;;;;2CAjBhB;;;;;;;;;;;;;;;;sCA0Bb,8OAAC;4BAAI,WAAU;sCAAkI;;;;;;sCAKjJ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,qIAAM;oCACL,SAAQ;oCACR,SAAS;oCACT,UAAU;oCACV,WAAU;8CAET,EAAE;;;;;;8CAEL,8OAAC,qIAAM;oCACL,SAAS;oCACT,UAAU,mBAAmB,QAAQ;oCACrC,WAAU;8CAET,6BACC;;0DACE,8OAAC;gDAAI,WAAU;;;;;;4CAAiC;;qEAIlD;;0DACE,8OAAC,0MAAI;gDAAC,WAAU;;;;;;4CACf,EAAE;;;;;;;;;;;;;;wBAOV,mBAAmB,QAAQ,CAAC,8BAC3B,8OAAC;4BAAI,WAAU;;gCAAwI;gCACxI,OAAO,OAAO,CAAC,eAAe;;;;;;;;;;;;;;;;;;;;;;;;AAOzD","debugId":null}},
    {"offset": {"line": 3559, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/components/ResultsModal.tsx"],"sourcesContent":["\"use client\";\n\nimport { VotingInfo, VotingResults } from \"@/hooks/useVotingSystem\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/Card\";\nimport { Button } from \"@/components/ui/Button\";\nimport { Badge } from \"@/components/ui/Badge\";\nimport { useLanguage } from \"@/app/providers\";\nimport { BarChart3, X, Eye, Users, Trophy } from \"lucide-react\";\n\ninterface ResultsModalProps {\n  voting: VotingInfo;\n  results?: VotingResults;\n  isOpen: boolean;\n  onClose: () => void;\n  onDecrypt: (votingId: number) => Promise<void>;\n  isDecrypting?: boolean;\n  userAddress?: string;\n}\n\nexport function ResultsModal({ \n  voting, \n  results, \n  isOpen, \n  onClose, \n  onDecrypt, \n  isDecrypting = false,\n  userAddress\n}: ResultsModalProps) {\n  const { t } = useLanguage();\n\n  if (!isOpen) return null;\n\n  const handleDecrypt = async () => {\n    try {\n      await onDecrypt(voting.id);\n    } catch (error) {\n      console.error(\"Failed to decrypt results:\", error);\n    }\n  };\n\n  const getWinningOption = () => {\n    if (!results || results.results.length === 0) return null;\n    \n    const maxVotes = Math.max(...results.results);\n    const winningIndex = results.results.findIndex(count => count === maxVotes);\n    \n    return {\n      index: winningIndex,\n      option: voting.options[winningIndex],\n      votes: maxVotes,\n    };\n  };\n\n  const winningOption = getWinningOption();\n  const isCreator = userAddress && voting.creator.toLowerCase() === userAddress.toLowerCase();\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <Card className=\"w-full max-w-2xl mx-auto max-h-[90vh] overflow-y-auto\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <BarChart3 className=\"w-5 h-5 text-primary\" />\n              <CardTitle className=\"text-lg\">{t(\"voting.results\")}</CardTitle>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={onClose}\n            >\n              <X className=\"w-4 h-4\" />\n            </Button>\n          </div>\n          <CardDescription>\n            {voting.title}\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent className=\"space-y-6\">\n          {/* Voting Info */}\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <strong>Total Votes:</strong>\n              <p className=\"flex items-center gap-1\">\n                <Users className=\"w-4 h-4\" />\n                {voting.totalVotes}\n              </p>\n            </div>\n            <div>\n              <strong>Status:</strong>\n              <div className=\"mt-1\">\n                <Badge variant={voting.isActive ? \"success\" : \"warning\"}>\n                  {voting.isActive ? t(\"voting.active\") : t(\"voting.ended\")}\n                </Badge>\n              </div>\n            </div>\n          </div>\n\n          {/* Results Section */}\n          {!results ? (\n            <div className=\"text-center py-8\">\n              <div className=\"mb-4\">\n                <Eye className=\"w-12 h-12 mx-auto text-muted-foreground mb-2\" />\n                <h3 className=\"text-lg font-medium mb-2\">Results Not Decrypted</h3>\n                <p className=\"text-muted-foreground text-sm mb-2\">\n                  Click the button below to make results public and decrypt them.\n                </p>\n                {voting.isActive && (\n                  <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded-md text-sm text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300 dark:border-yellow-800\">\n                    ⚠️ Note: Voting is still active. Results can only be decrypted after voting ends.\n                  </div>\n                )}\n              </div>\n              \n              <Button\n                onClick={handleDecrypt}\n                disabled={isDecrypting}\n                size=\"lg\"\n              >\n                {isDecrypting ? (\n                  <>\n                    <div className=\"loading-spinner w-4 h-4 mr-2\" />\n                    Decrypting...\n                  </>\n                ) : (\n                  <>\n                    <Eye className=\"w-4 h-4 mr-2\" />\n                    Decrypt Results\n                  </>\n                )}\n              </Button>\n\n              <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md text-sm text-blue-800 dark:bg-blue-900 dark:text-blue-300 dark:border-blue-800\">\n                🔒 Results are encrypted and will be decrypted using FHEVM technology.\n                {isCreator ? (\n                  <div className=\"mt-2 text-green-700 dark:text-green-300\">\n                    ✅ As the creator, you have default access to decrypt results.\n                  </div>\n                ) : (\n                  <div className=\"mt-2\">\n                    This process will first make the results publicly decryptable, then decrypt them.\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {/* Winner Announcement */}\n              {winningOption && (\n                <div className=\"p-4 bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200 rounded-lg dark:from-yellow-900 dark:to-orange-900 dark:border-yellow-800\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Trophy className=\"w-5 h-5 text-yellow-600\" />\n                    <h3 className=\"font-semibold text-yellow-800 dark:text-yellow-200\">\n                      Winning Option\n                    </h3>\n                  </div>\n                  <p className=\"text-yellow-700 dark:text-yellow-300\">\n                    <strong>{winningOption.option}</strong> with {winningOption.votes} votes\n                  </p>\n                </div>\n              )}\n\n              {/* Detailed Results */}\n              <div>\n                <h4 className=\"font-medium mb-3\">Detailed Results:</h4>\n                <div className=\"space-y-3\">\n                  {voting.options.map((option, index) => {\n                    const votes = results.results[index] || 0;\n                    const percentage = results.totalVotes > 0 \n                      ? ((votes / results.totalVotes) * 100).toFixed(1)\n                      : \"0.0\";\n                    const isWinner = winningOption?.index === index;\n\n                    return (\n                      <div\n                        key={index}\n                        className={`p-4 border rounded-lg ${\n                          isWinner \n                            ? \"border-yellow-300 bg-yellow-50 dark:border-yellow-700 dark:bg-yellow-900\" \n                            : \"border-border\"\n                        }`}\n                      >\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"font-medium\">{option}</span>\n                            {isWinner && <Trophy className=\"w-4 h-4 text-yellow-600\" />}\n                          </div>\n                          <div className=\"text-right\">\n                            <div className=\"font-semibold\">{votes} votes</div>\n                            <div className=\"text-sm text-muted-foreground\">{percentage}%</div>\n                          </div>\n                        </div>\n                        \n                        {/* Progress Bar */}\n                        <div className=\"w-full bg-gray-200 rounded-full h-2 dark:bg-gray-700\">\n                          <div\n                            className={`h-2 rounded-full transition-all duration-500 ${\n                              isWinner \n                                ? \"bg-yellow-500\" \n                                : \"bg-primary\"\n                            }`}\n                            style={{ width: `${percentage}%` }}\n                          />\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Summary */}\n              <div className=\"p-4 bg-muted rounded-lg\">\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <strong>Total Votes:</strong>\n                    <p>{results.totalVotes}</p>\n                  </div>\n                  <div>\n                    <strong>Participation:</strong>\n                    <p>{results.totalVotes} voters</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Close Button */}\n          <div className=\"flex justify-end pt-4\">\n            <Button onClick={onClose} variant=\"outline\">\n              {t(\"common.back\")}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4130, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useFhevm } from \"@/fhevm/useFhevm\";\nimport { useInMemoryStorage } from \"@/hooks/useInMemoryStorage\";\nimport { useMetaMask } from \"@/hooks/useMetaMask\";\nimport { useVotingSystem } from \"@/hooks/useVotingSystem\";\nimport { useLanguage } from \"./providers\";\nimport { VotingCard } from \"@/components/VotingCard\";\nimport { CreateVotingForm } from \"@/components/CreateVotingForm\";\nimport { VoteModal } from \"@/components/VoteModal\";\nimport { ResultsModal } from \"@/components/ResultsModal\";\nimport { Button } from \"@/components/ui/Button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/Card\";\nimport { Badge } from \"@/components/ui/Badge\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Wallet, Plus, Vote, BarChart3, Globe, Settings, RefreshCw } from \"lucide-react\";\n\nexport default function HomePage() {\n  const { t, language, setLanguage } = useLanguage();\n  const { storage: fhevmDecryptionSignatureStorage } = useInMemoryStorage();\n  \n  const {\n    provider,\n    chainId,\n    accounts,\n    isConnected,\n    connect,\n    disconnect,\n    ethersSigner,\n    ethersReadonlyProvider,\n    sameChain,\n    sameSigner,\n    initialMockChains,\n    status: walletStatus,\n    error: walletError,\n  } = useMetaMask();\n\n  const {\n    instance: fhevmInstance,\n    status: fhevmStatus,\n    error: fhevmError,\n  } = useFhevm({\n    provider: provider, // Don't use localhost fallback when connecting to Sepolia\n    chainId: chainId,\n    initialMockChains,\n    enabled: isConnected, // Only enable when wallet is connected\n  });\n\n  // Create a readonly provider for reading data even without wallet connection\n  const readonlyProvider = useMemo(() => {\n    if (ethersReadonlyProvider) return ethersReadonlyProvider;\n    \n    // Use environment-specific fallback\n    const chainId = process.env.NEXT_PUBLIC_CHAIN_ID;\n    if (chainId === \"11155111\") {\n      // Sepolia network\n      return new ethers.JsonRpcProvider(`https://sepolia.infura.io/v3/${process.env.NEXT_PUBLIC_INFURA_API_KEY || \"78e2c8be8a32466cae545f06ebc780c1\"}`);\n    }\n    \n    // Default to localhost for development\n    return new ethers.JsonRpcProvider(\"http://localhost:8545\");\n  }, [ethersReadonlyProvider]);\n\n  const {\n    contractAddress,\n    isDeployed,\n    canInteract,\n    votings,\n    votingResults,\n    isLoading,\n    isCreating,\n    isVoting,\n    message,\n    refreshVotings,\n    createVoting,\n    castVote,\n    endVoting,\n    decryptVotingResults,\n    hasVoted,\n    canVote,\n    getVotingStatus,\n  } = useVotingSystem({\n    instance: fhevmInstance,\n    fhevmDecryptionSignatureStorage,\n    eip1193Provider: provider,\n    chainId: chainId || 31337,\n    ethersSigner,\n    ethersReadonlyProvider: readonlyProvider,\n    sameChain,\n    sameSigner,\n  });\n\n  const [activeTab, setActiveTab] = useState<\"votings\" | \"create\" | \"admin\">(\"votings\");\n  const [votingStates, setVotingStates] = useState<Map<number, { hasVoted: boolean; canVote: boolean }>>(new Map());\n  const [voteModalOpen, setVoteModalOpen] = useState(false);\n  const [selectedVoting, setSelectedVoting] = useState<VotingInfo | null>(null);\n  const [resultsModalOpen, setResultsModalOpen] = useState(false);\n  const [selectedResultsVoting, setSelectedResultsVoting] = useState<VotingInfo | null>(null);\n\n  // Load voting states for current user\n  useEffect(() => {\n    if (!isConnected || !accounts?.[0] || !canInteract) return;\n\n    const loadVotingStates = async () => {\n      const states = new Map();\n      \n      for (const voting of votings) {\n        try {\n          const [userHasVoted, userCanVote] = await Promise.all([\n            hasVoted(voting.id, accounts[0]),\n            canVote(voting.id, accounts[0]),\n          ]);\n          \n          states.set(voting.id, {\n            hasVoted: userHasVoted,\n            canVote: userCanVote,\n          });\n        } catch (error) {\n          console.error(`Failed to load state for voting ${voting.id}:`, error);\n        }\n      }\n      \n      setVotingStates(states);\n    };\n\n    loadVotingStates();\n  }, [votings, accounts, isConnected, canInteract]); // Remove function dependencies to prevent infinite loop\n\n  const handleVote = async (votingId: number) => {\n    const voting = votings.find(v => v.id === votingId);\n    if (voting) {\n      setSelectedVoting(voting);\n      setVoteModalOpen(true);\n    }\n  };\n\n  const handleVoteSubmit = async (votingId: number, optionIndex: number) => {\n    try {\n      await castVote(votingId, optionIndex);\n      // Reload voting states\n      if (accounts?.[0]) {\n        const [userHasVoted, userCanVote] = await Promise.all([\n          hasVoted(votingId, accounts[0]),\n          canVote(votingId, accounts[0]),\n        ]);\n        \n        setVotingStates(prev => new Map(prev.set(votingId, {\n          hasVoted: userHasVoted,\n          canVote: userCanVote,\n        })));\n      }\n    } catch (error) {\n      console.error(\"Failed to cast vote:\", error);\n      throw error; // Re-throw to let modal handle the error\n    }\n  };\n\n  const handleViewResults = async (votingId: number) => {\n    const voting = votings.find(v => v.id === votingId);\n    if (voting) {\n      setSelectedResultsVoting(voting);\n      setResultsModalOpen(true);\n    }\n  };\n\n  const handleEndVoting = async (votingId: number) => {\n    try {\n      await endVoting(votingId);\n    } catch (error) {\n      console.error(\"Failed to end voting:\", error);\n    }\n  };\n\n  const handleCreateVoting = async (data: {\n    title: string;\n    description: string;\n    options: string[];\n    startTime: number;\n    endTime: number;\n    isPublic: boolean;\n  }) => {\n    await createVoting(\n      data.title,\n      data.description,\n      data.options,\n      data.startTime,\n      data.endTime,\n      data.isPublic\n    );\n    setActiveTab(\"votings\");\n  };\n\n  const isAdmin = accounts?.[0] && contractAddress; // Simplified admin check\n\n  // Show wallet connection prompt only if trying to interact\n  const showWalletPrompt = !isConnected && (activeTab === \"create\" || activeTab === \"admin\");\n\n  if (showWalletPrompt) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"flex items-center justify-center gap-2 text-2xl\">\n              <Vote className=\"w-8 h-8 text-primary\" />\n              {t(\"voting.title\")}\n            </CardTitle>\n            <CardDescription>\n              {t(\"voting.subtitle\")}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Button\n              onClick={connect}\n              disabled={walletStatus === \"connecting\"}\n              className=\"w-full\"\n              size=\"lg\"\n            >\n              <Wallet className=\"w-4 h-4 mr-2\" />\n              {walletStatus === \"connecting\" ? t(\"common.loading\") : t(\"nav.connect\")}\n            </Button>\n            \n            {walletError && (\n              <div className=\"p-3 bg-red-50 border border-red-200 rounded-md text-sm text-red-800\">\n                {walletError.message}\n              </div>\n            )}\n\n            <div className=\"flex justify-center gap-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setLanguage(\"en\")}\n                className={language === \"en\" ? \"bg-primary text-primary-foreground\" : \"\"}\n              >\n                English\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setLanguage(\"zh\")}\n                className={language === \"zh\" ? \"bg-primary text-primary-foreground\" : \"\"}\n              >\n                中文\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (isDeployed === false) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-red-600\">Contract Not Deployed</CardTitle>\n            <CardDescription>\n              VotingSystem contract not found for chain ID {chainId}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-sm text-muted-foreground\">\n              <p>Please deploy the contract first:</p>\n              <ol className=\"list-decimal list-inside mt-2 space-y-1\">\n                <li>Start Hardhat node: <code>npx hardhat node</code></li>\n                <li>Deploy contract: <code>npx hardhat --network localhost deploy --tags VotingSystem</code></li>\n                <li>Refresh this page</li>\n              </ol>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <header className=\"border-b bg-card\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <Vote className=\"w-8 h-8 text-primary\" />\n              <div>\n                <h1 className=\"text-2xl font-bold\">{t(\"voting.title\")}</h1>\n                <p className=\"text-sm text-muted-foreground\">{t(\"voting.subtitle\")}</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-4\">\n              {/* Language Toggle */}\n              <div className=\"flex gap-1\">\n                <Button\n                  variant={language === \"en\" ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setLanguage(\"en\")}\n                >\n                  EN\n                </Button>\n                <Button\n                  variant={language === \"zh\" ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setLanguage(\"zh\")}\n                >\n                  中文\n                </Button>\n              </div>\n\n              {/* Wallet Info */}\n              <div className=\"flex items-center gap-2\">\n                {isConnected ? (\n                  <>\n                    <Badge variant=\"outline\">\n                      Chain: {chainId}\n                    </Badge>\n                    <Button\n                      variant=\"outline\"\n                      onClick={disconnect}\n                      size=\"sm\"\n                    >\n                      {accounts?.[0]?.slice(0, 6)}...{accounts?.[0]?.slice(-4)}\n                    </Button>\n                  </>\n                ) : (\n                  <Button\n                    onClick={connect}\n                    disabled={walletStatus === \"connecting\"}\n                    size=\"sm\"\n                  >\n                    <Wallet className=\"w-4 h-4 mr-2\" />\n                    {walletStatus === \"connecting\" ? t(\"common.loading\") : t(\"nav.connect\")}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Navigation Tabs */}\n          <div className=\"flex gap-1 mt-4\">\n            <Button\n              variant={activeTab === \"votings\" ? \"default\" : \"ghost\"}\n              onClick={() => setActiveTab(\"votings\")}\n              size=\"sm\"\n            >\n              <BarChart3 className=\"w-4 h-4 mr-2\" />\n              {t(\"nav.home\")}\n            </Button>\n            <Button\n              variant={activeTab === \"create\" ? \"default\" : \"ghost\"}\n              onClick={() => setActiveTab(\"create\")}\n              size=\"sm\"\n              disabled={!isConnected}\n            >\n              <Plus className=\"w-4 h-4 mr-2\" />\n              {t(\"nav.create\")}\n            </Button>\n            {isAdmin && (\n              <Button\n                variant={activeTab === \"admin\" ? \"default\" : \"ghost\"}\n                onClick={() => setActiveTab(\"admin\")}\n                size=\"sm\"\n              >\n                <Settings className=\"w-4 h-4 mr-2\" />\n                {t(\"nav.admin\")}\n              </Button>\n            )}\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-4 py-8\">\n        {/* Status Messages */}\n        {(fhevmStatus !== \"ready\" || message) && (\n          <div className=\"mb-6\">\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm\">\n                      <strong>FHEVM Status:</strong> {fhevmStatus}\n                    </p>\n                    {message && (\n                      <p className=\"text-sm text-muted-foreground mt-1\">{message}</p>\n                    )}\n                  </div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={refreshVotings}\n                    disabled={isLoading}\n                  >\n                    <RefreshCw className={`w-4 h-4 mr-2 ${isLoading ? \"animate-spin\" : \"\"}`} />\n                    Refresh\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Tab Content */}\n        {activeTab === \"votings\" && (\n          <div>\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-xl font-semibold\">Active Votings</h2>\n              <Badge variant=\"outline\">\n                {votings.length} {votings.length === 1 ? \"voting\" : \"votings\"}\n              </Badge>\n            </div>\n\n            {isLoading ? (\n              <div className=\"text-center py-12\">\n                <div className=\"loading-spinner w-8 h-8 mx-auto mb-4\" />\n                <p>{t(\"common.loading\")}</p>\n              </div>\n            ) : votings.length === 0 ? (\n              <Card>\n                <CardContent className=\"text-center py-12\">\n                  <Vote className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                  <h3 className=\"text-lg font-medium mb-2\">No votings yet</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Create the first voting to get started\n                  </p>\n                  <Button onClick={() => setActiveTab(\"create\")}>\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    {t(\"voting.create\")}\n                  </Button>\n                </CardContent>\n              </Card>\n            ) : (\n              <div className=\"voting-grid\">\n                {votings.map((voting) => {\n                  const status = getVotingStatus(voting);\n                  const state = votingStates.get(voting.id);\n                  const isCreator = accounts?.[0]?.toLowerCase() === voting.creator.toLowerCase();\n\n                  return (\n                    <VotingCard\n                      key={voting.id}\n                      voting={voting}\n                      status={status}\n                      onVote={handleVote}\n                      onViewResults={handleViewResults}\n                      onEndVoting={handleEndVoting}\n                      canVote={state?.canVote || false}\n                      hasVoted={state?.hasVoted || false}\n                      isCreator={isCreator}\n                      isAdmin={isAdmin}\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === \"create\" && (\n          <div>\n            <div className=\"mb-6\">\n              <h2 className=\"text-xl font-semibold mb-2\">{t(\"voting.create\")}</h2>\n              <p className=\"text-muted-foreground\">\n                Create a new confidential voting with encrypted votes\n              </p>\n            </div>\n\n            <CreateVotingForm\n              onSubmit={handleCreateVoting}\n              isLoading={isCreating}\n            />\n          </div>\n        )}\n\n        {activeTab === \"admin\" && isAdmin && (\n          <div>\n            <div className=\"mb-6\">\n              <h2 className=\"text-xl font-semibold mb-2\">{t(\"nav.admin\")}</h2>\n              <p className=\"text-muted-foreground\">\n                Manage votings and system settings\n              </p>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>System Information</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <strong>Contract Address:</strong>\n                    <p className=\"font-mono text-xs\">{contractAddress}</p>\n                  </div>\n                  <div>\n                    <strong>Chain ID:</strong>\n                    <p>{chainId}</p>\n                  </div>\n                  <div>\n                    <strong>Total Votings:</strong>\n                    <p>{votings.length}</p>\n                  </div>\n                  <div>\n                    <strong>FHEVM Status:</strong>\n                    <p>{fhevmStatus}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </main>\n\n      {/* Vote Modal */}\n      {selectedVoting && (\n        <VoteModal\n          voting={selectedVoting}\n          isOpen={voteModalOpen}\n          onClose={() => setVoteModalOpen(false)}\n          onVote={handleVoteSubmit}\n          isLoading={isVoting}\n        />\n      )}\n\n      {/* Results Modal */}\n      {selectedResultsVoting && (\n        <ResultsModal\n          voting={selectedResultsVoting}\n          results={votingResults.get(selectedResultsVoting.id)}\n          isOpen={resultsModalOpen}\n          onClose={() => setResultsModalOpen(false)}\n          onDecrypt={decryptVotingResults}\n          isDecrypting={isLoading}\n          userAddress={accounts?.[0]}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}