{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/galaxy/coding/zama_project_demo/zama_voting_001/zama-voting-frontend/fhevm/internal/mock/fhevmMock.ts"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////\n//\n// WARNING!!\n// ALWAY USE DYNAMICALLY IMPORT THIS FILE TO AVOID INCLUDING THE ENTIRE \n// FHEVM MOCK LIB IN THE FINAL PRODUCTION BUNDLE!!\n//\n//////////////////////////////////////////////////////////////////////////\n\nimport { JsonRpcProvider } from \"ethers\";\nimport { MockFhevmInstance } from \"@fhevm/mock-utils\";\nimport { FhevmInstance } from \"../../fhevmTypes\";\n\nexport const fhevmMockCreateInstance = async (parameters: {\n  rpcUrl: string;\n  chainId: number;\n  metadata: {\n    ACLAddress: `0x${string}`;\n    InputVerifierAddress: `0x${string}`;\n    KMSVerifierAddress: `0x${string}`;\n  };\n}): Promise<FhevmInstance> => {\n  const provider = new JsonRpcProvider(parameters.rpcUrl);\n  const instance = await MockFhevmInstance.create(provider, provider, {\n    //aclContractAddress: \"0x50157CFfD6bBFA2DECe204a89ec419c23ef5755D\",\n    aclContractAddress: parameters.metadata.ACLAddress,\n    chainId: parameters.chainId,\n    gatewayChainId: 55815,\n    // inputVerifierContractAddress: \"0x901F8942346f7AB3a01F6D7613119Bca447Bb030\",\n    // kmsContractAddress: \"0x1364cBBf2cDF5032C47d8226a6f6FBD2AFCDacAC\",\n    inputVerifierContractAddress: parameters.metadata.InputVerifierAddress,\n    kmsContractAddress: parameters.metadata.KMSVerifierAddress,\n    verifyingContractAddressDecryption:\n      \"0x5ffdaAB0373E62E2ea2944776209aEf29E631A64\",\n    verifyingContractAddressInputVerification:\n      \"0x812b06e1CDCE800494b79fFE4f925A504a9A9810\",\n  });\n  return instance;\n};\n"],"names":[],"mappings":"AAAA,0EAA0E;AAC1E,EAAE;AACF,YAAY;AACZ,wEAAwE;AACxE,kDAAkD;AAClD,EAAE;AACF,0EAA0E;;;;;AAE1E;AACA;;;AAGO,MAAM,0BAA0B,OAAO;IAS5C,MAAM,WAAW,IAAI,8LAAe,CAAC,WAAW,MAAM;IACtD,MAAM,WAAW,MAAM,sMAAiB,CAAC,MAAM,CAAC,UAAU,UAAU;QAClE,mEAAmE;QACnE,oBAAoB,WAAW,QAAQ,CAAC,UAAU;QAClD,SAAS,WAAW,OAAO;QAC3B,gBAAgB;QAChB,8EAA8E;QAC9E,oEAAoE;QACpE,8BAA8B,WAAW,QAAQ,CAAC,oBAAoB;QACtE,oBAAoB,WAAW,QAAQ,CAAC,kBAAkB;QAC1D,oCACE;QACF,2CACE;IACJ;IACA,OAAO;AACT","debugId":null}}]
}